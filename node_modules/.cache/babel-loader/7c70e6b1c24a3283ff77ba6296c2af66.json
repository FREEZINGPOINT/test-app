{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/components/blog/HeadingBlock.js\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cls from \"classnames\";\nimport Heading from \"./Heading\";\n\nclass HeadingBlock extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.renderHtml = () => {\n      const {\n        level,\n        children\n      } = this.props;\n\n      if (children && children.length > 0) {\n        const nodeValue = children[0].props.value;\n        return React.createElement(Heading, {\n          level: `h${level}`,\n          id: nodeValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, children), React.createElement(\"a\", {\n          href: `#${nodeValue}`,\n          className: \"link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"#\"));\n      } else {\n        return React.createElement(React.Fragment, null, children);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.renderHtml());\n  }\n\n}\n\nexport default HeadingBlock;","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/components/blog/HeadingBlock.js"],"names":["React","PureComponent","PropTypes","cls","Heading","HeadingBlock","renderHtml","level","children","props","length","nodeValue","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,YAAN,SAA2BJ,aAA3B,CAAyC;AAAA;AAAA;;AAAA,SACvCK,UADuC,GAC1B,MAAM;AACjB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,MAAT,GAAkB,CAAlC,EAAqC;AACnC,cAAMC,SAAS,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYC,KAAZ,CAAkBG,KAApC;AACA,eACE,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAG,IAAGL,KAAM,EAA1B;AAA6B,UAAA,EAAE,EAAEI,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBH,QAAzB,CADF,EAEE;AAAG,UAAA,IAAI,EAAG,IAAGG,SAAU,EAAvB;AAA0B,UAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAQD,OAVD,MAUO;AACL,eAAO,0CAAGH,QAAH,CAAP;AACD;AACF,KAjBsC;AAAA;;AAkBvCK,EAAAA,MAAM,GAAG;AACP,WAAO,0CAAG,KAAKP,UAAL,EAAH,CAAP;AACD;;AApBsC;;AAuBzC,eAAeD,YAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cls from \"classnames\";\nimport Heading from \"./Heading\";\n\nclass HeadingBlock extends PureComponent {\n  renderHtml = () => {\n    const { level, children } = this.props;\n\n    if (children && children.length > 0) {\n      const nodeValue = children[0].props.value;\n      return (\n        <Heading level={`h${level}`} id={nodeValue}>\n          <span className=\"title\">{children}</span>\n          <a href={`#${nodeValue}`} className=\"link\">\n            #\n          </a>\n        </Heading>\n      );\n    } else {\n      return <>{children}</>;\n    }\n  };\n  render() {\n    return <>{this.renderHtml()}</>;\n  }\n}\n\nexport default HeadingBlock;"]},"metadata":{},"sourceType":"module"}