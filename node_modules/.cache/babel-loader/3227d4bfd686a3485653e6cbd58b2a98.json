{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/components/TabbleUtils.js\";\nimport React from 'react';\nimport { Layout, Card, Button, Divider, Table, Pagination } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { FetchDoGet, FetchDoPost } from './../commons/Utils';\n/**\n * 我们的图表的utils  整体性编辑我们的图表\n */\n\nclass TableUtils extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n      pageInfo: {},\n      tableIsLoading: true\n    };\n  }\n  /**\n   * 初始化我们的数据\n   */\n\n\n  componentDidMount() {\n    const _this = this;\n\n    const requestUrl = this.props.requestUrl;\n    FetchDoGet(requestUrl, function (response) {\n      console.log(\"selectAllUsers\", response);\n\n      _this.setState({\n        dataSource: response.data,\n        pageInfo: response,\n        tableIsLoading: false\n      });\n    });\n  }\n\n  render() {\n    const _this = this;\n\n    const columns = this.props.columns; // const dataSource=this.props.dataSource;\n\n    const requestUrl = this.props.requestUrl;\n    const currentPage = this.props.currentPage;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.dataSource,\n      size: \"small\" // scroll={{ x: 1500, y: 440 }}\n      ,\n      pagination: false,\n      loading: this.state.tableIsLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      style: {\n        float: \"right\",\n        marginRight: \"10px\",\n        marginTop: \"5px\"\n      },\n      total: this.state.pageInfo.totalCount,\n      current: this.state.pageInfo.currentPage // defaultPageSize={this.state.pageInfo.pageSize}\n      ,\n      pageSize: undefined == this.state.pageInfo.pageSize ? 10 : this.state.pageInfo.pageSize,\n      onChange: (page, pageSize) => {\n        //console.log(page,pageSize)\n        this.setState({\n          tableIsLoading: true\n        });\n        FetchDoGet(requestUrl, function (response) {\n          console.log(\"selectAllUsers\", response);\n\n          _this.setState({\n            dataSource: response.data,\n            pageInfo: response,\n            tableIsLoading: false\n          });\n        }, {\n          \"currentPage\": page,\n          \"pageSize\": pageSize\n        });\n      },\n      onShowSizeChange: (current, size) => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })); //end return\n  } // end render\n\n\n}\n\nexport default withRouter(TableUtils);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/components/TabbleUtils.js"],"names":["React","Layout","Card","Button","Divider","Table","Pagination","withRouter","FetchDoGet","FetchDoPost","TableUtils","Component","constructor","props","state","dataSource","pageInfo","tableIsLoading","componentDidMount","_this","requestUrl","response","console","log","setState","data","render","columns","currentPage","float","marginRight","marginTop","totalCount","undefined","pageSize","page","current","size"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAgBC,IAAhB,EAAqBC,MAArB,EAA4BC,OAA5B,EAAoCC,KAApC,EAA0CC,UAA1C,QAA2D,MAA3D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,UAAR,EAAmBC,WAAnB,QAAqC,oBAArC;AAEA;;;;AAGA,MAAMC,UAAN,SAAyBV,KAAK,CAACW,SAA/B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAC,EADJ;AAEPC,MAAAA,QAAQ,EAAC,EAFF;AAGPC,MAAAA,cAAc,EAAC;AAHR,KAAX;AAKH;AAED;;;;;AAGAC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,KAAK,GAAC,IAAZ;;AACA,UAAMC,UAAU,GAAC,KAAKP,KAAL,CAAWO,UAA5B;AACAZ,IAAAA,UAAU,CAACY,UAAD,EAAY,UAASC,QAAT,EAAkB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,QAA7B;;AACAF,MAAAA,KAAK,CAACK,QAAN,CAAe;AACXT,QAAAA,UAAU,EAACM,QAAQ,CAACI,IADT;AAEXT,QAAAA,QAAQ,EAACK,QAFE;AAGXJ,QAAAA,cAAc,EAAC;AAHJ,OAAf;AAKH,KAPS,CAAV;AASH;;AAGDS,EAAAA,MAAM,GAAE;AACJ,UAAMP,KAAK,GAAC,IAAZ;;AACA,UAAMQ,OAAO,GAAC,KAAKd,KAAL,CAAWc,OAAzB,CAFI,CAGJ;;AACA,UAAMP,UAAU,GAAC,KAAKP,KAAL,CAAWO,UAA5B;AACA,UAAMQ,WAAW,GAAC,KAAKf,KAAL,CAAWe,WAA7B;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACA,MAAA,OAAO,EAAED,OADT;AAEA,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWC,UAFvB;AAGA,MAAA,IAAI,EAAC,OAHL,CAIA;AAJA;AAKA,MAAA,UAAU,EAAE,KALZ;AAMA,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,cANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI,oBAAC,UAAD;AACA,MAAA,KAAK,EAAE;AAACY,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,WAAW,EAAC,MAA3B;AAAkCC,QAAAA,SAAS,EAAC;AAA5C,OADP;AAEA,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,QAAX,CAAoBgB,UAF3B;AAGA,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWE,QAAX,CAAoBY,WAH7B,CAIA;AAJA;AAKA,MAAA,QAAQ,EAAEK,SAAS,IAAE,KAAKnB,KAAL,CAAWE,QAAX,CAAoBkB,QAA/B,GAAwC,EAAxC,GAA2C,KAAKpB,KAAL,CAAWE,QAAX,CAAoBkB,QALzE;AAMA,MAAA,QAAQ,EAAE,CAACC,IAAD,EAAOD,QAAP,KAAkB;AACxB;AACA,aAAKV,QAAL,CAAc;AACVP,UAAAA,cAAc,EAAC;AADL,SAAd;AAGAT,QAAAA,UAAU,CAACY,UAAD,EAAY,UAASC,QAAT,EAAkB;AACpCC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,QAA7B;;AACAF,UAAAA,KAAK,CAACK,QAAN,CAAe;AACXT,YAAAA,UAAU,EAACM,QAAQ,CAACI,IADT;AAEXT,YAAAA,QAAQ,EAACK,QAFE;AAGXJ,YAAAA,cAAc,EAAC;AAHJ,WAAf;AAKH,SAPS,EAOR;AAAC,yBAAckB,IAAf;AAAoB,sBAAWD;AAA/B,SAPQ,CAAV;AASH,OApBD;AAqBA,MAAA,gBAAgB,EAAE,CAACE,OAAD,EAAUC,IAAV,KAAiB,CAElC,CAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ,CANI,CA0CH;AACJ,GAxEmC,CAwEnC;;;AAxEmC;;AA0ExC,eAAgB9B,UAAU,CAACG,UAAD,CAA1B","sourcesContent":["import React from 'react'\nimport { Layout,Card,Button,Divider,Table,Pagination} from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport {FetchDoGet,FetchDoPost} from './../commons/Utils'\n\n/**\n * 我们的图表的utils  整体性编辑我们的图表\n */\nclass TableUtils extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            dataSource:[],\n            pageInfo:{},\n            tableIsLoading:true\n        }\n    }\n\n    /**\n     * 初始化我们的数据\n     */\n    componentDidMount(){\n        const _this=this;\n        const requestUrl=this.props.requestUrl;\n        FetchDoGet(requestUrl,function(response){\n            console.log(\"selectAllUsers\",response);\n            _this.setState({\n                dataSource:response.data,\n                pageInfo:response,\n                tableIsLoading:false\n            })\n        });\n\n    }\n\n\n    render(){\n        const _this=this;\n        const columns=this.props.columns;\n        // const dataSource=this.props.dataSource;\n        const requestUrl=this.props.requestUrl;\n        const currentPage=this.props.currentPage;\n        return(\n            <div>\n                <Table \n                columns={columns}\n                dataSource={this.state.dataSource}\n                size=\"small\"\n                // scroll={{ x: 1500, y: 440 }}\n                pagination={false}\n                loading={this.state.tableIsLoading}\n                />\n                <Pagination\n                style={{float:\"right\",marginRight:\"10px\",marginTop:\"5px\"}}\n                total={this.state.pageInfo.totalCount}\n                current={this.state.pageInfo.currentPage}\n                // defaultPageSize={this.state.pageInfo.pageSize}\n                pageSize={undefined==this.state.pageInfo.pageSize?10:this.state.pageInfo.pageSize}\n                onChange={(page, pageSize)=>{\n                    //console.log(page,pageSize)\n                    this.setState({\n                        tableIsLoading:true\n                    })\n                    FetchDoGet(requestUrl,function(response){\n                        console.log(\"selectAllUsers\",response);\n                        _this.setState({\n                            dataSource:response.data,\n                            pageInfo:response,\n                            tableIsLoading:false\n                        })\n                    },{\"currentPage\":page,\"pageSize\":pageSize});\n\n                }}\n                onShowSizeChange={(current, size)=>{\n\n                }}\n                />\n            </div>\n        )//end return\n    }// end render\n}\nexport default  withRouter(TableUtils)"]},"metadata":{},"sourceType":"module"}