{"ast":null,"code":"import _classCallCheck from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{withRouter}from'react-router-dom';import LocalBackGround from'./../commons/LocalBackGround';import{FetchDoGet,FetchDoPost,MessageAlter}from'./../commons/Utils';import{Layout,Card,Button,Divider,Form,Input}from'antd';import{MenuUnfoldOutlined,MenuFoldOutlined,PlusSquareOutlined}from'@ant-design/icons';import TabbleUtils from'../components/TabbleUtils';import LocalIconFont from'../components/LocalIconFont';import LocalModal from'../components/LocalModal';import SearchUserSelect from'../components/SearchUserSelect';var columns=[{title:'部门ID',width:50,dataIndex:'dId',key:'dId',fixed:'left',align:\"tenter\",ellipsis:true},{title:'部门名称',width:50,dataIndex:'dName',align:\"tenter\"},{title:'部门领导者',width:50,dataIndex:'leaderName',align:\"tenter\"},{title:'部门创建者',width:50,dataIndex:'creatorName',align:\"tenter\"},{title:'创建时间',width:50,dataIndex:'gmtCreate',align:\"tenter\"},{title:'修改时间',width:50,dataIndex:'gmtModified',align:\"tenter\"},{title:'操作',key:\"operation\",width:50,fixed:'right',align:\"tenter\",render:function render(text,record,index){return React.createElement(Button,{type:\"primary\",ghost:false,style:{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\"},icon:React.createElement(LocalIconFont,{type:\"icon-edit\"})},\"\\u7F16\\u8F91\");}}];/**\n * 管理我们的部门\n */var ManageDepart=/*#__PURE__*/function(_React$Component){_inherits(ManageDepart,_React$Component);function ManageDepart(props){var _this;_classCallCheck(this,ManageDepart);_this=_possibleConstructorReturn(this,_getPrototypeOf(ManageDepart).call(this,props));_this.formRef=React.createRef();_this.state={requestUrl:\"/block/v1/depart/selectDeparts\",queryData:{},tableKey:Math.random(),modelVisible:false,localModalKey:Math.random()};return _this;}/**\n     * 初始化我们的变量\n     */_createClass(ManageDepart,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(LocalBackGround,{content:React.createElement(Card,{key:\"card111\",style:{width:\"100%\"},bordered:false,hoverable:false,title:\"\\u90E8\\u95E8\\u5217\\u8868\",extra:React.createElement(Button,{type:\"primary\",onClick:function onClick(){_this2.setState({modelVisible:true,localModalKey:Math.random()});}},React.createElement(PlusSquareOutlined,null),\"\\u6DFB\\u52A0\\u90E8\\u95E8\")},React.createElement(TabbleUtils,{columns:columns,requestUrl:this.state.requestUrl,currentPage:1,searchParams:this.state.queryData// 每一次都是更新的\n,key:this.state.tableKey}),React.createElement(LocalModal,{title:\"添加部门\",key:this.state.localModalKey,visible:this.state.modelVisible,extra:React.createElement(Form,{ref:this.formRef,layout:\"vertical\",onSubmit:function onSubmit(e){e.preventDefault();var form=_this2.props.form;form.validateFields(function(err,values){if(!err){console.log(values);}});}},React.createElement(Form.Item,{label:\"\\u90E8\\u95E8\\u540D\\u79F0\",name:\"dName\",rules:[{required:true,message:'请输入部门名称'}],onFinish:function onFinish(values){console.log(values);},required:true},React.createElement(Input,{placeholder:\"\\u90E8\\u95E8\\u540D\\u79F0\"})),React.createElement(Form.Item,{label:\"\\u90E8\\u95E8\\u9886\\u5BFC\\u8005\",name:\"leaderId\",rules:[{required:true,message:'请选择部门领导人'}],required:true},React.createElement(SearchUserSelect,{onChange:function onChange(value){//console.log(value)\n//console.log(\"this.formRef.current\",this.formRef.current)\n_this2.formRef.current.setFieldsValue({leaderId:value.value});}})),React.createElement(Form.Item,null,React.createElement(Button,{type:\"primary\",htmlType:\"submit\",style:{float:\"left\",marginLeft:\"10px\"},onClick:function onClick(){console.log(_this2.formRef.current.getFieldValue());var _this=_this2;//添加我们的数据\nFetchDoPost(\"/block/v1/depart/addDepart\",function(response){MessageAlter(\"success\",\"操作成功\");_this.setState({tableKey:Math.random(),modelVisible:false,localModalKey:Math.random()});},_this2.formRef.current.getFieldValue());}},\"\\u63D0\\u4EA4\"),React.createElement(Button,{type:\"primary\",htmlType:\"reset\",style:{float:\"left\",marginLeft:\"10px\",backgroundColor:\"#fa541c\",border:\"0px\"},onClick:function onClick(){_this2.formRef.current.resetFields();}},\"\\u91CD\\u7F6E\")))}),\"//end LocalModal\")});}}]);return ManageDepart;}(React.Component);export default withRouter(ManageDepart);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/ManageDepart.js"],"names":["React","withRouter","LocalBackGround","FetchDoGet","FetchDoPost","MessageAlter","Layout","Card","Button","Divider","Form","Input","MenuUnfoldOutlined","MenuFoldOutlined","PlusSquareOutlined","TabbleUtils","LocalIconFont","LocalModal","SearchUserSelect","columns","title","width","dataIndex","key","fixed","align","ellipsis","render","text","record","index","backgroundColor","border","float","ManageDepart","props","formRef","createRef","state","requestUrl","queryData","tableKey","Math","random","modelVisible","localModalKey","setState","e","preventDefault","form","validateFields","err","values","console","log","required","message","value","current","setFieldsValue","leaderId","marginLeft","getFieldValue","_this","response","resetFields","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport LocalBackGround from './../commons/LocalBackGround'\nimport {FetchDoGet,FetchDoPost, MessageAlter} from './../commons/Utils'\nimport { Layout,Card,Button,Divider,Form,Input} from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PlusSquareOutlined\n} from '@ant-design/icons';\nimport TabbleUtils from '../components/TabbleUtils';\nimport LocalIconFont from '../components/LocalIconFont';\nimport LocalModal from '../components/LocalModal';\nimport SearchUserSelect from '../components/SearchUserSelect';\n\nconst columns=[\n    {\n        title: '部门ID',\n        width: 50,\n        dataIndex: 'dId',\n        key: 'dId',\n        fixed: 'left',\n        align:\"tenter\",\n        ellipsis:true\n    },\n    {\n        title: '部门名称',\n        width: 50,\n        dataIndex: 'dName',\n        align:\"tenter\"\n    },\n    {\n        title: '部门领导者',\n        width: 50,\n        dataIndex: 'leaderName',\n        align:\"tenter\"\n    },\n    {\n        title: '部门创建者',\n        width: 50,\n        dataIndex: 'creatorName',\n        align:\"tenter\"\n    },\n    {\n        title: '创建时间',\n        width: 50,\n        dataIndex: 'gmtCreate',\n        align:\"tenter\"\n    },\n    {\n        title: '修改时间',\n        width: 50,\n        dataIndex: 'gmtModified',\n        align:\"tenter\"\n    },\n    {\n        title: '操作',\n        key:\"operation\",\n        width: 50,\n        fixed: 'right',\n        align:\"tenter\",\n        render: (text, record, index) => {\n\n            return(\n                <Button type=\"primary\"\n                        ghost={false} \n                        style={{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\"}}\n                        icon={<LocalIconFont type=\"icon-edit\" />}\n                        >\n                        编辑</Button>  \n            )\n        }\n    },\n];\n\n\n\n/**\n * 管理我们的部门\n */\nclass ManageDepart extends React.Component{\n    formRef = React.createRef();\n\n    constructor(props){\n        super(props)\n        this.state={\n            requestUrl:\"/block/v1/depart/selectDeparts\",\n            queryData:{},\n            tableKey:Math.random(),\n            modelVisible:false,\n            localModalKey:Math.random()\n        }\n    }\n\n    /**\n     * 初始化我们的变量\n     */\n    componentDidMount(){\n\n    }\n\n\n    render(){\n\n\n        return(\n            <LocalBackGround content={\n                <Card key={\"card111\"} style={{width:\"100%\"}} \n                bordered={false}\n                hoverable={false}\n                title=\"部门列表\"\n                extra={\n                    <Button type=\"primary\"\n                    onClick={()=>{\n                        this.setState({\n                            modelVisible:true,\n                            localModalKey:Math.random()\n                        })\n                    }}\n                    >\n                        <PlusSquareOutlined />\n                        添加部门\n                    </Button>\n                }\n                >\n                    <TabbleUtils\n                    columns={columns}\n                    requestUrl={this.state.requestUrl}\n                    currentPage={1}\n                    searchParams={this.state.queryData}\n                    // 每一次都是更新的\n                    key={this.state.tableKey}/>\n\n                    <LocalModal\n                    title={\"添加部门\"}\n                    key={this.state.localModalKey}\n                     visible={this.state.modelVisible}\n                     extra={\n                        <Form ref={this.formRef}\n                        layout={\"vertical\"}\n                        onSubmit={(e)=>{\n                            e.preventDefault()\n                            const form = this.props.form;\n                            form.validateFields((err, values) => {\n                                if (!err) {\n                                       console.log(values)\n                                }\n                    \n                                  \n                             })\n                        \n                        }}\n                        >\n                            <Form.Item label=\"部门名称\" \n                            name=\"dName\"\n                            rules={[{ required: true, message: '请输入部门名称' }]}\n                            onFinish={(values)=>{\n                                console.log(values)\n                            }}\n                            required={true}>\n                                <Input placeholder=\"部门名称\" />\n                            </Form.Item>\n                            <Form.Item label=\"部门领导者\" \n                            name=\"leaderId\"\n                            rules={[{ required: true, message: '请选择部门领导人' }]}\n                            required={true}>\n                                <SearchUserSelect\n                                onChange={(value)=>{\n                                    //console.log(value)\n                                    //console.log(\"this.formRef.current\",this.formRef.current)\n                                    this.formRef.current.setFieldsValue({\n                                        leaderId:value.value\n                                    })\n                                }}\n                                />\n                                {/* <Input placeholder=\"部门名称\" /> */}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" \n                                style={{float:\"left\",marginLeft:\"10px\"}}\n                                onClick={()=>{\n                                    console.log(this.formRef.current.getFieldValue())\n                                    const _this=this;\n                                    //添加我们的数据\n                                    FetchDoPost(\"/block/v1/depart/addDepart\",function(response){\n                                        MessageAlter(\"success\",\"操作成功\")\n                                        _this.setState({\n                                            tableKey:Math.random(),\n                                            modelVisible:false,\n                                            localModalKey:Math.random()\n                                        })\n                                    },this.formRef.current.getFieldValue());\n                                }}\n                                >\n                                    提交\n                                </Button>\n                                <Button type=\"primary\" htmlType=\"reset\"\n                                style={{float:\"left\",marginLeft:\"10px\",backgroundColor:\"#fa541c\",border:\"0px\"}}\n                                onClick={()=>{\n                                    this.formRef.current.resetFields();\n                                }}\n                                >\n                                    重置\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    }/>//end LocalModal\n                </Card>\n            }/>\n        )\n    }\n}\n\nexport default withRouter(ManageDepart)"]},"metadata":{},"sourceType":"module"}