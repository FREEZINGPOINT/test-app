{"ast":null,"code":"import _classCallCheck from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{withRouter}from'react-router-dom';import LocalBackGround from'./../commons/LocalBackGround';import{FetchDoGet,FetchDoPost}from'./../commons/Utils';import{Layout,Card,Button,Divider}from'antd';import{MenuUnfoldOutlined,MenuFoldOutlined,EditOutlined}from'@ant-design/icons';import TabbleUtils from'../components/TabbleUtils';import LocalIconFont from'../components/LocalIconFont';var columns=[{title:'菜单ID',width:50,dataIndex:'menuId',key:'menuId',fixed:'left',align:\"tenter\"},{title:'菜单图标',width:50,dataIndex:'mIcon',key:'roleName',align:\"tenter\",render:function render(text,record,index){return React.createElement(LocalIconFont,{type:record.mIcon});}},{title:'菜单名称',width:50,dataIndex:'menuName',align:\"tenter\"},{title:'请求路径',width:50,dataIndex:'menuUrl',align:\"tenter\"},{title:'菜单类型',width:50,dataIndex:'menuLevel',align:\"tenter\"},{title:'排序',width:50,dataIndex:'menuSort',align:\"tenter\"},{title:'创建时间',width:50,dataIndex:'gmtCreate',align:\"tenter\"},{title:'修改时间',width:50,dataIndex:'gmtModified',align:\"tenter\"},{title:'操作',key:\"operation\",width:50,fixed:'right',align:\"tenter\",render:function render(text,record,index){return React.createElement(\"div\",null,React.createElement(Button,{type:\"primary\",ghost:false,style:{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\"},icon:React.createElement(LocalIconFont,{type:\"icon-edit\"})},\"\\u7F16\\u8F91\"),React.createElement(Button,{type:\"primary\",ghost:false,style:{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\",marginLeft:\"6px\"},icon:React.createElement(EditOutlined,null)},\"\\u7BA1\\u7406\\u5B50\\u83DC\\u5355\"));}}];/**\n * 菜单的基本管理\n */var ManageMenus=/*#__PURE__*/function(_React$Component){_inherits(ManageMenus,_React$Component);function ManageMenus(props){var _this;_classCallCheck(this,ManageMenus);_this=_possibleConstructorReturn(this,_getPrototypeOf(ManageMenus).call(this,props));_this.state={requestUrl:\"/block/v1/menu/getAllMenu\",queryData:{},tableKey:Math.random()};return _this;}/**\n     * 初始化我们的变量\n     */_createClass(ManageMenus,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){return React.createElement(LocalBackGround,{content:React.createElement(Card,{key:\"card1\",style:{width:\"100%\"},bordered:false,hoverable:false,title:\"\\u89D2\\u8272\\u5217\\u8868\",extra:React.createElement(Button,{type:\"primary\"},\"\\u7BA1\\u7406\\u4E3B\\u83DC\\u5355\")},React.createElement(TabbleUtils,{columns:columns,requestUrl:this.state.requestUrl,currentPage:1,searchParams:this.state.queryData// 每一次都是更新的\n,key:this.state.tableKey}),React.createElement(Card.Meta,{title:React.createElement(\"div\",{style:{color:\"#f5222d\"}},\"*\\u83DC\\u5355\\u7684\\u7C7B\\u522B\\u7531\\u7CFB\\u7EDF\\u8BBE\\u5B9A\\uFF0C\\u603B\\u91CF\\u4E0D\\u53D8\\uFF0C\\u6211\\u4EEC\\u4EC5\\u4EC5\\u53EF\\u4EE5\\u4FEE\\u6539\\u6392\\u5E8F\\u4EE5\\u53CA\\u7236\\u83DC\\u5355\\u7684\\u5B50\\u83DC\\u5355*\")}))});}}]);return ManageMenus;}(React.Component);export default withRouter(ManageMenus);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/ManageMenus.js"],"names":["React","withRouter","LocalBackGround","FetchDoGet","FetchDoPost","Layout","Card","Button","Divider","MenuUnfoldOutlined","MenuFoldOutlined","EditOutlined","TabbleUtils","LocalIconFont","columns","title","width","dataIndex","key","fixed","align","render","text","record","index","mIcon","backgroundColor","border","float","marginLeft","ManageMenus","props","state","requestUrl","queryData","tableKey","Math","random","color","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport LocalBackGround from './../commons/LocalBackGround'\nimport {FetchDoGet,FetchDoPost} from './../commons/Utils'\nimport { Layout,Card,Button,Divider} from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport TabbleUtils from '../components/TabbleUtils';\nimport LocalIconFont from '../components/LocalIconFont';\n\nconst columns=[\n    {\n        title: '菜单ID',\n        width: 50,\n        dataIndex: 'menuId',\n        key: 'menuId',\n        fixed: 'left',\n        align:\"tenter\"\n    },\n    {\n        title: '菜单图标',\n        width: 50,\n        dataIndex: 'mIcon',\n        key: 'roleName',\n        align:\"tenter\",\n        render: (text, record, index) => {\n            return <LocalIconFont type={record.mIcon}/>\n        }\n    },\n    {\n        title: '菜单名称',\n        width: 50,\n        dataIndex: 'menuName',\n        align:\"tenter\"\n    },\n    {\n        title: '请求路径',\n        width: 50,\n        dataIndex: 'menuUrl',\n        align:\"tenter\"\n    },\n    {\n        title: '菜单类型',\n        width: 50,\n        dataIndex: 'menuLevel',\n        align:\"tenter\"\n    },\n    {\n        title: '排序',\n        width: 50,\n        dataIndex: 'menuSort',\n        align:\"tenter\"\n    },\n    {\n        title: '创建时间',\n        width: 50,\n        dataIndex: 'gmtCreate',\n        align:\"tenter\"\n    },\n    {\n        title: '修改时间',\n        width: 50,\n        dataIndex: 'gmtModified',\n        align:\"tenter\"\n    },\n    {\n        title: '操作',\n        key:\"operation\",\n        width: 50,\n        fixed: 'right',\n        align:\"tenter\",\n        render: (text, record, index) => {\n\n            return(\n                <div>\n                     <Button type=\"primary\"\n                        ghost={false} \n                        style={{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\"}}\n                        icon={<LocalIconFont type=\"icon-edit\" />}\n                        >\n                        编辑</Button>\n                    <Button type=\"primary\"\n                        ghost={false} \n                        style={{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\",marginLeft:\"6px\"}}\n                        icon={<EditOutlined />}\n                        >\n                        管理子菜单</Button>\n                </div>\n            )\n        }\n    },\n];\n\n\n/**\n * 菜单的基本管理\n */\nclass ManageMenus extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            requestUrl:\"/block/v1/menu/getAllMenu\",\n            queryData:{},\n            tableKey:Math.random()\n        }\n    }\n\n    /**\n     * 初始化我们的变量\n     */\n    componentDidMount(){\n\n    }\n\n    render(){\n\n\n        return(\n            <LocalBackGround content={\n                <Card key={\"card1\"} style={{width:\"100%\"}} \n                bordered={false}\n                hoverable={false}\n                title=\"角色列表\"\n                extra={\n                    <Button type=\"primary\">管理主菜单</Button>\n                }\n                >\n                    <TabbleUtils\n                    columns={columns}\n                    requestUrl={this.state.requestUrl}\n                    currentPage={1}\n                    searchParams={this.state.queryData}\n                    // 每一次都是更新的\n                    key={this.state.tableKey}/>\n                    <Card.Meta title={\n                        <div style={{color:\"#f5222d\"}}>*菜单的类别由系统设定，总量不变，我们仅仅可以修改排序以及父菜单的子菜单*</div>\n                    }/>\n                </Card>\n            }/>\n        )\n    }\n}\n\nexport default withRouter(ManageMenus)"]},"metadata":{},"sourceType":"module"}