{"ast":null,"code":"import _objectSpread from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/**\n * \n * @param {} initialState \n */export function createStore(initialState){var state=initialState;var listeners=[];function setState(partial){state=_objectSpread({},state,{},partial);for(var i=0;i<listeners.length;i++){listeners[i]();}}function getState(){return state;}function subscribe(listener){listeners.push(listener);return function unsubscribe(){var index=listeners.indexOf(listener);listeners.splice(index,1);};}return{setState:setState,getState:getState,subscribe:subscribe};}","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/store/StoreUtils.js"],"names":["createStore","initialState","state","listeners","setState","partial","i","length","getState","subscribe","listener","push","unsubscribe","index","indexOf","splice"],"mappings":"qHACA;;;GAIA,MAAO,SAASA,CAAAA,WAAT,CAAqBC,YAArB,CAAmC,CACtC,GAAIC,CAAAA,KAAK,CAAGD,YAAZ,CACA,GAAME,CAAAA,SAAS,CAAG,EAAlB,CAEA,QAASC,CAAAA,QAAT,CAAkBC,OAAlB,CAA2B,CAC1BH,KAAK,kBACDA,KADC,IAEDG,OAFC,CAAL,CAIA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,SAAS,CAACI,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CAC1CH,SAAS,CAACG,CAAD,CAAT,GACA,CACD,CAED,QAASE,CAAAA,QAAT,EAAoB,CACnB,MAAON,CAAAA,KAAP,CACA,CAED,QAASO,CAAAA,SAAT,CAAmBC,QAAnB,CAA6B,CAC5BP,SAAS,CAACQ,IAAV,CAAeD,QAAf,EAEA,MAAO,SAASE,CAAAA,WAAT,EAAuB,CAC7B,GAAMC,CAAAA,KAAK,CAAGV,SAAS,CAACW,OAAV,CAAkBJ,QAAlB,CAAd,CACAP,SAAS,CAACY,MAAV,CAAiBF,KAAjB,CAAwB,CAAxB,EACA,CAHD,CAIA,CAED,MAAO,CACNT,QAAQ,CAARA,QADM,CAENI,QAAQ,CAARA,QAFM,CAGNC,SAAS,CAATA,SAHM,CAAP,CAKA","sourcesContent":["\n/**\n * \n * @param {} initialState \n */\nexport function createStore(initialState) {\n    let state = initialState;\n    const listeners = [];\n    \n    function setState(partial) {\n     state = {\n      ...state,\n      ...partial,\n     };\n     for (let i = 0; i < listeners.length; i++) {\n      listeners[i]();\n     }\n    }\n    \n    function getState() {\n     return state;\n    }\n\n    function subscribe(listener) {\n     listeners.push(listener);\n    \n     return function unsubscribe() {\n      const index = listeners.indexOf(listener);\n      listeners.splice(index, 1);\n     };\n    }\n    \n    return {\n     setState,\n     getState,\n     subscribe,\n    };\n   }"]},"metadata":{},"sourceType":"module"}