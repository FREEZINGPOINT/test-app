{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/components/SearchUserSelect.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { FetchDoGet } from '../commons/Utils';\nconst {\n  Option\n} = Select;\n/**\n * 查询用户的搜索框\n */\n\nclass SearchUserSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUser = value => {\n      console.log('fetching user', value);\n      this.lastFetchId += 1;\n      const fetchId = this.lastFetchId;\n      this.setState({\n        data: [],\n        fetching: true\n      });\n      FetchDoGet(\"/block/v1/sys_user/selectAllUsers\", function (response) {\n        console.log(response);\n      }); // fetch('https://randomuser.me/api/?results=5')\n      //   .then(response => response.json())\n      //   .then(body => {\n      //     if (fetchId !== this.lastFetchId) {\n      //       // for fetch callback order\n      //       return;\n      //     }\n      //     const data = body.results.map(user => ({\n      //       text: `${user.name.first} ${user.name.last}`,\n      //       value: user.login.username,\n      //     }));\n      //     this.setState({ data, fetching: false });\n      //   });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        value,\n        data: [],\n        fetching: false\n      });\n    };\n\n    this.state = {\n      data: [],\n      value: [],\n      fetching: false\n    };\n    this.lastFetchId = 0;\n    this.fetchUser = debounce(this.fetchUser, 800);\n  }\n\n  render() {\n    const {\n      fetching,\n      data,\n      value\n    } = this.state;\n    return React.createElement(Select, {\n      mode: \"multiple\",\n      labelInValue: true,\n      value: value,\n      placeholder: \"Select users\",\n      notFoundContent: fetching ? React.createElement(Spin, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }) : null,\n      filterOption: false,\n      onSearch: this.fetchUser,\n      onChange: this.handleChange,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, data.map(d => React.createElement(Option, {\n      key: d.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, d.text)));\n  } //end render\n\n\n} //end class\n\n\nexport default withRouter(SearchUserSelect);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/components/SearchUserSelect.js"],"names":["React","withRouter","Select","Spin","debounce","FetchDoGet","Option","SearchUserSelect","Component","constructor","props","fetchUser","value","console","log","lastFetchId","fetchId","setState","data","fetching","response","handleChange","state","render","width","map","d","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAaJ,MAAnB;AAEA;;;;AAGA,MAAMK,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA8C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,SAbkB,GAaNC,KAAK,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACA,WAAKG,WAAL,IAAoB,CAApB;AACA,YAAMC,OAAO,GAAG,KAAKD,WAArB;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE;AAAtB,OAAd;AAEAd,MAAAA,UAAU,CAAC,mCAAD,EAAqC,UAASe,QAAT,EAAkB;AAC7DP,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACH,OAFS,CAAV,CANiB,CAWjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArCe;;AAAA,SAuChBC,YAvCgB,GAuCDT,KAAK,IAAI;AACtB,WAAKK,QAAL,CAAc;AACZL,QAAAA,KADY;AAEZM,QAAAA,IAAI,EAAE,EAFM;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KA7Ce;;AAEd,SAAKG,KAAL,GAAW;AACPJ,MAAAA,IAAI,EAAE,EADC;AAEPN,MAAAA,KAAK,EAAE,EAFA;AAGPO,MAAAA,QAAQ,EAAE;AAHH,KAAX;AAMA,SAAKJ,WAAL,GAAmB,CAAnB;AACA,SAAKJ,SAAL,GAAiBP,QAAQ,CAAC,KAAKO,SAAN,EAAiB,GAAjB,CAAzB;AAEH;;AAoCDY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEJ,MAAAA,QAAF;AAAYD,MAAAA,IAAZ;AAAkBN,MAAAA;AAAlB,QAA4B,KAAKU,KAAvC;AAEA,WACI,oBAAC,MAAD;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,YAAY,MAFZ;AAGA,MAAA,KAAK,EAAEV,KAHP;AAIA,MAAA,WAAW,EAAC,cAJZ;AAKA,MAAA,eAAe,EAAEO,QAAQ,GAAG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAA2B,IALpD;AAMA,MAAA,YAAY,EAAE,KANd;AAOA,MAAA,QAAQ,EAAE,KAAKR,SAPf;AAQA,MAAA,QAAQ,EAAE,KAAKU,YARf;AASA,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKN,IAAI,CAACO,GAAL,CAASC,CAAC,IACX,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAC,CAACd,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBc,CAAC,CAACC,IAAzB,CADC,CAXL,CADJ;AAkBH,GAtEyC,CAsEzC;;;AAtEyC,C,CAwE7C;;;AAED,eAAe1B,UAAU,CAACM,gBAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { FetchDoGet } from '../commons/Utils';\n\n\nconst { Option } = Select;\n\n/**\n * 查询用户的搜索框\n */\nclass SearchUserSelect extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            data: [],\n            value: [],\n            fetching: false,\n        }\n\n        this.lastFetchId = 0;\n        this.fetchUser = debounce(this.fetchUser, 800);    \n\n    }\n\n    fetchUser = value => {\n        console.log('fetching user', value);\n        this.lastFetchId += 1;\n        const fetchId = this.lastFetchId;\n        this.setState({ data: [], fetching: true });\n\n        FetchDoGet(\"/block/v1/sys_user/selectAllUsers\",function(response){\n            console.log(response)\n        });\n\n\n        // fetch('https://randomuser.me/api/?results=5')\n        //   .then(response => response.json())\n        //   .then(body => {\n        //     if (fetchId !== this.lastFetchId) {\n        //       // for fetch callback order\n        //       return;\n        //     }\n        //     const data = body.results.map(user => ({\n        //       text: `${user.name.first} ${user.name.last}`,\n        //       value: user.login.username,\n        //     }));\n        //     this.setState({ data, fetching: false });\n        //   });\n      };\n\n      handleChange = value => {\n        this.setState({\n          value,\n          data: [],\n          fetching: false,\n        });\n      };\n\n    render(){\n        const { fetching, data, value } = this.state;\n\n        return(\n            <Select\n            mode=\"multiple\"\n            labelInValue\n            value={value}\n            placeholder=\"Select users\"\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n            filterOption={false}\n            onSearch={this.fetchUser}\n            onChange={this.handleChange}\n            style={{ width: '100%' }}\n            >\n                {data.map(d => (\n                <Option key={d.value}>{d.text}</Option>\n                ))}\n            </Select>\n        )\n\n    }//end render\n\n}//end class\n\nexport default withRouter(SearchUserSelect)"]},"metadata":{},"sourceType":"module"}