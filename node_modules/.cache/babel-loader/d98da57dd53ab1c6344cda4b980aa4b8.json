{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/router/ManageDepart.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LocalBackGround from './../commons/LocalBackGround';\nimport { FetchDoGet, FetchDoPost, MessageAlter } from './../commons/Utils';\nimport { Layout, Card, Button, Divider, Form, Input } from 'antd';\nimport { MenuUnfoldOutlined, MenuFoldOutlined, PlusSquareOutlined } from '@ant-design/icons';\nimport TabbleUtils from '../components/TabbleUtils';\nimport LocalIconFont from '../components/LocalIconFont';\nimport LocalModal from '../components/LocalModal';\nimport SearchUserSelect from '../components/SearchUserSelect';\nconst columns = [{\n  title: '部门ID',\n  width: 50,\n  dataIndex: 'dId',\n  key: 'dId',\n  fixed: 'left',\n  align: \"tenter\"\n}, {\n  title: '部门名称',\n  width: 50,\n  dataIndex: 'dName',\n  align: \"tenter\"\n}, {\n  title: '部门领导者',\n  width: 50,\n  dataIndex: 'leaderName',\n  align: \"tenter\"\n}, {\n  title: '部门创建者',\n  width: 50,\n  dataIndex: 'creatorName',\n  align: \"tenter\"\n}, {\n  title: '创建时间',\n  width: 50,\n  dataIndex: 'gmtCreate',\n  align: \"tenter\"\n}, {\n  title: '修改时间',\n  width: 50,\n  dataIndex: 'gmtModified',\n  align: \"tenter\"\n}, {\n  title: '操作',\n  key: \"operation\",\n  width: 50,\n  fixed: 'right',\n  align: \"tenter\",\n  render: (text, record, index) => {\n    return React.createElement(Button, {\n      type: \"primary\",\n      ghost: false,\n      style: {\n        backgroundColor: \"#389e0d\",\n        border: \"none\",\n        float: \"left\"\n      },\n      icon: React.createElement(LocalIconFont, {\n        type: \"icon-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u7F16\\u8F91\");\n  }\n}];\n/**\n * 管理我们的部门\n */\n\nclass ManageDepart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.state = {\n      requestUrl: \"/block/v1/depart/selectDeparts\",\n      queryData: {},\n      tableKey: Math.random(),\n      modelVisible: false,\n      localModalKey: Math.random()\n    };\n  }\n  /**\n   * 初始化我们的变量\n   */\n\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(LocalBackGround, {\n      content: React.createElement(Card, {\n        key: \"card111\",\n        style: {\n          width: \"100%\"\n        },\n        bordered: false,\n        hoverable: false,\n        title: \"\\u90E8\\u95E8\\u5217\\u8868\",\n        extra: React.createElement(Button, {\n          type: \"primary\",\n          onClick: () => {\n            this.setState({\n              modelVisible: true,\n              localModalKey: Math.random()\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(PlusSquareOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), \"\\u6DFB\\u52A0\\u90E8\\u95E8\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TabbleUtils, {\n        columns: columns,\n        requestUrl: this.state.requestUrl,\n        currentPage: 1,\n        searchParams: this.state.queryData // 每一次都是更新的\n        ,\n        key: this.state.tableKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(LocalModal, {\n        title: \"添加部门\",\n        key: this.state.localModalKey,\n        visible: this.state.modelVisible,\n        extra: React.createElement(Form, {\n          ref: this.formRef,\n          layout: \"vertical\",\n          onSubmit: e => {\n            e.preventDefault();\n            const form = this.props.form;\n            form.validateFields((err, values) => {\n              if (!err) {\n                console.log(values);\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: \"\\u90E8\\u95E8\\u540D\\u79F0\",\n          name: \"dName\",\n          rules: [{\n            required: true,\n            message: '请输入部门名称'\n          }],\n          onFinish: values => {\n            console.log(values);\n          },\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Input, {\n          placeholder: \"\\u90E8\\u95E8\\u540D\\u79F0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: \"\\u90E8\\u95E8\\u9886\\u5BFC\\u8005\",\n          name: \"leaderId\",\n          rules: [{\n            required: true,\n            message: '请选择部门领导人'\n          }],\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(SearchUserSelect, {\n          onChange: value => {\n            //console.log(value)\n            //console.log(\"this.formRef.current\",this.formRef.current)\n            this.formRef.current.setFieldsValue({\n              leaderId: value.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            float: \"left\",\n            marginLeft: \"10px\"\n          },\n          onClick: () => {\n            console.log(this.formRef.current.getFieldValue());\n\n            const _this = this; //添加我们的数据\n\n\n            FetchDoPost(\"/block/v1/depart/addDepart\", function (response) {\n              MessageAlter(\"success\", \"操作成功\");\n\n              _this.setState({\n                tableKey: Math.random(),\n                modelVisible: false,\n                localModalKey: Math.random()\n              });\n            }, this.formRef.current.getFieldValue());\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"\\u63D0\\u4EA4\"), React.createElement(Button, {\n          type: \"primary\",\n          htmlType: \"reset\",\n          style: {\n            float: \"left\",\n            marginLeft: \"10px\",\n            backgroundColor: \"#fa541c\",\n            border: \"0px\"\n          },\n          onClick: () => {\n            this.formRef.current.resetFields();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"\\u91CD\\u7F6E\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), \"//end LocalModal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(ManageDepart);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/ManageDepart.js"],"names":["React","withRouter","LocalBackGround","FetchDoGet","FetchDoPost","MessageAlter","Layout","Card","Button","Divider","Form","Input","MenuUnfoldOutlined","MenuFoldOutlined","PlusSquareOutlined","TabbleUtils","LocalIconFont","LocalModal","SearchUserSelect","columns","title","width","dataIndex","key","fixed","align","render","text","record","index","backgroundColor","border","float","ManageDepart","Component","constructor","props","formRef","createRef","state","requestUrl","queryData","tableKey","Math","random","modelVisible","localModalKey","componentDidMount","setState","e","preventDefault","form","validateFields","err","values","console","log","required","message","value","current","setFieldsValue","leaderId","marginLeft","getFieldValue","_this","response","resetFields"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport LocalBackGround from './../commons/LocalBackGround'\nimport {FetchDoGet,FetchDoPost, MessageAlter} from './../commons/Utils'\nimport { Layout,Card,Button,Divider,Form,Input} from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PlusSquareOutlined\n} from '@ant-design/icons';\nimport TabbleUtils from '../components/TabbleUtils';\nimport LocalIconFont from '../components/LocalIconFont';\nimport LocalModal from '../components/LocalModal';\nimport SearchUserSelect from '../components/SearchUserSelect';\n\nconst columns=[\n    {\n        title: '部门ID',\n        width: 50,\n        dataIndex: 'dId',\n        key: 'dId',\n        fixed: 'left',\n        align:\"tenter\"\n    },\n    {\n        title: '部门名称',\n        width: 50,\n        dataIndex: 'dName',\n        align:\"tenter\"\n    },\n    {\n        title: '部门领导者',\n        width: 50,\n        dataIndex: 'leaderName',\n        align:\"tenter\"\n    },\n    {\n        title: '部门创建者',\n        width: 50,\n        dataIndex: 'creatorName',\n        align:\"tenter\"\n    },\n    {\n        title: '创建时间',\n        width: 50,\n        dataIndex: 'gmtCreate',\n        align:\"tenter\"\n    },\n    {\n        title: '修改时间',\n        width: 50,\n        dataIndex: 'gmtModified',\n        align:\"tenter\"\n    },\n    {\n        title: '操作',\n        key:\"operation\",\n        width: 50,\n        fixed: 'right',\n        align:\"tenter\",\n        render: (text, record, index) => {\n\n            return(\n                <Button type=\"primary\"\n                        ghost={false} \n                        style={{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\"}}\n                        icon={<LocalIconFont type=\"icon-edit\" />}\n                        >\n                        编辑</Button>  \n            )\n        }\n    },\n];\n\n\n\n/**\n * 管理我们的部门\n */\nclass ManageDepart extends React.Component{\n    formRef = React.createRef();\n\n    constructor(props){\n        super(props)\n        this.state={\n            requestUrl:\"/block/v1/depart/selectDeparts\",\n            queryData:{},\n            tableKey:Math.random(),\n            modelVisible:false,\n            localModalKey:Math.random()\n        }\n    }\n\n    /**\n     * 初始化我们的变量\n     */\n    componentDidMount(){\n\n    }\n\n\n    render(){\n\n\n        return(\n            <LocalBackGround content={\n                <Card key={\"card111\"} style={{width:\"100%\"}} \n                bordered={false}\n                hoverable={false}\n                title=\"部门列表\"\n                extra={\n                    <Button type=\"primary\"\n                    onClick={()=>{\n                        this.setState({\n                            modelVisible:true,\n                            localModalKey:Math.random()\n                        })\n                    }}\n                    >\n                        <PlusSquareOutlined />\n                        添加部门\n                    </Button>\n                }\n                >\n                    <TabbleUtils\n                    columns={columns}\n                    requestUrl={this.state.requestUrl}\n                    currentPage={1}\n                    searchParams={this.state.queryData}\n                    // 每一次都是更新的\n                    key={this.state.tableKey}/>\n\n                    <LocalModal\n                    title={\"添加部门\"}\n                    key={this.state.localModalKey}\n                     visible={this.state.modelVisible}\n                     extra={\n                        <Form ref={this.formRef}\n                        layout={\"vertical\"}\n                        onSubmit={(e)=>{\n                            e.preventDefault()\n                            const form = this.props.form;\n                            form.validateFields((err, values) => {\n                                if (!err) {\n                                       console.log(values)\n                                }\n                    \n                                  \n                             })\n                        \n                        }}\n                        >\n                            <Form.Item label=\"部门名称\" \n                            name=\"dName\"\n                            rules={[{ required: true, message: '请输入部门名称' }]}\n                            onFinish={(values)=>{\n                                console.log(values)\n                            }}\n                            required={true}>\n                                <Input placeholder=\"部门名称\" />\n                            </Form.Item>\n                            <Form.Item label=\"部门领导者\" \n                            name=\"leaderId\"\n                            rules={[{ required: true, message: '请选择部门领导人' }]}\n                            required={true}>\n                                <SearchUserSelect\n                                onChange={(value)=>{\n                                    //console.log(value)\n                                    //console.log(\"this.formRef.current\",this.formRef.current)\n                                    this.formRef.current.setFieldsValue({\n                                        leaderId:value.value\n                                    })\n                                }}\n                                />\n                                {/* <Input placeholder=\"部门名称\" /> */}\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" htmlType=\"submit\" \n                                style={{float:\"left\",marginLeft:\"10px\"}}\n                                onClick={()=>{\n                                    console.log(this.formRef.current.getFieldValue())\n                                    const _this=this;\n                                    //添加我们的数据\n                                    FetchDoPost(\"/block/v1/depart/addDepart\",function(response){\n                                        MessageAlter(\"success\",\"操作成功\")\n                                        _this.setState({\n                                            tableKey:Math.random(),\n                                            modelVisible:false,\n                                            localModalKey:Math.random()\n                                        })\n                                    },this.formRef.current.getFieldValue());\n                                }}\n                                >\n                                    提交\n                                </Button>\n                                <Button type=\"primary\" htmlType=\"reset\"\n                                style={{float:\"left\",marginLeft:\"10px\",backgroundColor:\"#fa541c\",border:\"0px\"}}\n                                onClick={()=>{\n                                    this.formRef.current.resetFields();\n                                }}\n                                >\n                                    重置\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    }/>//end LocalModal\n                </Card>\n            }/>\n        )\n    }\n}\n\nexport default withRouter(ManageDepart)"]},"metadata":{},"sourceType":"module"}