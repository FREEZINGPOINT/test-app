{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/router/ManageUserGroup.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LocalBackGround from './../commons/LocalBackGround';\nimport { FetchDoGet, FetchDoPost } from './../commons/Utils';\nimport { Layout, Card, Button, Divider } from 'antd';\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from '@ant-design/icons';\nimport TabbleUtils from '../components/TabbleUtils';\nimport LocalIconFont from '../components/LocalIconFont';\nconst columns = [{\n  title: '用户组ID',\n  width: 50,\n  dataIndex: 'groupId',\n  key: 'groupId',\n  fixed: 'left',\n  align: \"tenter\"\n}, {\n  title: '用户组名称',\n  width: 50,\n  dataIndex: 'groupName',\n  align: \"tenter\"\n}, {\n  title: '用户组类别',\n  width: 50,\n  dataIndex: 'groupTypeName',\n  align: \"tenter\"\n}, {\n  title: '用户组的版本',\n  width: 50,\n  dataIndex: 'groupVersion',\n  align: \"tenter\"\n}, {\n  title: '领导者',\n  width: 50,\n  dataIndex: 'leaderName',\n  align: \"tenter\"\n}, {\n  title: '创建时间',\n  width: 50,\n  dataIndex: 'gmtCreate',\n  align: \"tenter\"\n}, {\n  title: '修改时间',\n  width: 50,\n  dataIndex: 'gmtModified',\n  align: \"tenter\"\n}, {\n  title: '操作',\n  key: \"operation\",\n  width: 50,\n  fixed: 'right',\n  align: \"tenter\",\n  render: (text, record, index) => {\n    return React.createElement(Button, {\n      type: \"primary\",\n      ghost: false,\n      style: {\n        backgroundColor: \"#389e0d\",\n        border: \"none\",\n        float: \"left\"\n      },\n      icon: React.createElement(LocalIconFont, {\n        type: \"icon-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u7EC4\\u7BA1\\u7406\");\n  }\n}];\n/**\n * 管理我们的用户组的操作\n */\n\nclass ManageUserGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestUrl: \"/block/v1/user_group/selectAllUserGroup\",\n      queryData: {},\n      tableKey: Math.random()\n    };\n  }\n  /**\n   * 初始化我们的变量\n   */\n\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(LocalBackGround, {\n      content: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Card, {\n        key: \"card11\",\n        style: {\n          width: \"100%\"\n        },\n        bordered: false,\n        hoverable: false,\n        title: \"\\u7528\\u6237\\u7EC4\\u5217\\u8868\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TabbleUtils, {\n        columns: columns,\n        requestUrl: this.state.requestUrl,\n        currentPage: 1,\n        searchParams: this.state.queryData // 每一次都是更新的\n        ,\n        key: this.state.tableKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Card, {\n        key: \"card11\",\n        style: {\n          width: \"100%\"\n        },\n        bordered: false,\n        hoverable: false,\n        title: \"\\u7528\\u6237\\u7EC4\\u5217\\u8868\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(TabbleUtils, {\n        columns: columns,\n        requestUrl: this.state.requestUrl,\n        currentPage: 1,\n        searchParams: this.state.queryData // 每一次都是更新的\n        ,\n        key: this.state.tableKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(ManageUserGroup);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/ManageUserGroup.js"],"names":["React","withRouter","LocalBackGround","FetchDoGet","FetchDoPost","Layout","Card","Button","Divider","MenuUnfoldOutlined","MenuFoldOutlined","TabbleUtils","LocalIconFont","columns","title","width","dataIndex","key","fixed","align","render","text","record","index","backgroundColor","border","float","ManageUserGroup","Component","constructor","props","state","requestUrl","queryData","tableKey","Math","random","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport LocalBackGround from './../commons/LocalBackGround'\nimport {FetchDoGet,FetchDoPost} from './../commons/Utils'\nimport { Layout,Card,Button,Divider} from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons';\nimport TabbleUtils from '../components/TabbleUtils';\nimport LocalIconFont from '../components/LocalIconFont';\n\nconst columns=[\n    {\n        title: '用户组ID',\n        width: 50,\n        dataIndex: 'groupId',\n        key: 'groupId',\n        fixed: 'left',\n        align:\"tenter\"\n    },\n    {\n        title: '用户组名称',\n        width: 50,\n        dataIndex: 'groupName',\n        align:\"tenter\"\n    },\n    {\n        title: '用户组类别',\n        width: 50,\n        dataIndex: 'groupTypeName',\n        align:\"tenter\"\n    },\n    {\n        title: '用户组的版本',\n        width: 50,\n        dataIndex: 'groupVersion',\n        align:\"tenter\"\n    },\n    {\n        title: '领导者',\n        width: 50,\n        dataIndex: 'leaderName',\n        align:\"tenter\"\n    },\n    {\n        title: '创建时间',\n        width: 50,\n        dataIndex: 'gmtCreate',\n        align:\"tenter\"\n    },\n    {\n        title: '修改时间',\n        width: 50,\n        dataIndex: 'gmtModified',\n        align:\"tenter\"\n    },\n    {\n        title: '操作',\n        key:\"operation\",\n        width: 50,\n        fixed: 'right',\n        align:\"tenter\",\n        render: (text, record, index) => {\n\n            return(\n                <Button type=\"primary\"\n                        ghost={false} \n                        style={{backgroundColor:\"#389e0d\",border:\"none\",float:\"left\"}}\n                        icon={<LocalIconFont type=\"icon-edit\" />}\n                        >\n                        用户组管理</Button>\n            )\n        }\n    },\n];\n\n/**\n * 管理我们的用户组的操作\n */\nclass ManageUserGroup extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            requestUrl:\"/block/v1/user_group/selectAllUserGroup\",\n            queryData:{},\n            tableKey:Math.random()\n        }\n    }\n\n    /**\n     * 初始化我们的变量\n     */\n    componentDidMount(){\n\n    }\n\n    render(){\n\n\n        return(\n            <LocalBackGround content={\n                <div>\n                    <Card key={\"card11\"} style={{width:\"100%\"}} \n                bordered={false}\n                hoverable={false}\n                title=\"用户组列表\"\n                >\n                    <TabbleUtils\n                    columns={columns}\n                    requestUrl={this.state.requestUrl}\n                    currentPage={1}\n                    searchParams={this.state.queryData}\n                    // 每一次都是更新的\n                    key={this.state.tableKey}/>\n                </Card>\n                <Divider/>\n               \n                <Card key={\"card11\"} style={{width:\"100%\"}} \n                bordered={false}\n                hoverable={false}\n                title=\"用户组列表\"\n                >\n                    <TabbleUtils\n                    columns={columns}\n                    requestUrl={this.state.requestUrl}\n                    currentPage={1}\n                    searchParams={this.state.queryData}\n                    // 每一次都是更新的\n                    key={this.state.tableKey}/>\n                </Card>\n                </div>\n            }/>\n        )\n    }\n\n}\n\nexport default withRouter(ManageUserGroup)"]},"metadata":{},"sourceType":"module"}