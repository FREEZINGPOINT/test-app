{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/components/SearchUserSelect.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { FetchDoGet } from '../commons/Utils';\nconst {\n  Option\n} = Select;\n/**\n * 查询用户的搜索框\n */\n\nclass SearchUserSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUser = value => {\n      console.log('fetching user', value);\n      this.setState({\n        data: [],\n        fetching: true\n      });\n\n      const _this = this;\n\n      FetchDoGet(\"/block/v1/sys_user/selectAllUsers\", function (response) {\n        _this.setState({\n          data: response.data,\n          fetching: false\n        });\n      }, {\n        userName: value\n      });\n    };\n\n    this.handleChange = value => {\n      // this.setState({\n      //   value,\n      //   data: [],\n      //   fetching: false,\n      // });\n\n      /**\n       * 回掉我们的请求\n       */\n      this.props.onChange(value);\n    };\n\n    this.onFocus = () => {} // this.setState({\n    //   data: [],\n    //   fetching: false,\n    // });\n\n    /**\n     * 初始化我们的数据\n     */\n    ;\n\n    this.state = {\n      data: [],\n      fetching: false,\n      requestUrl: \"/block/v1/sys_user/selectAllUsers\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: [],\n      fetching: true\n    });\n\n    const _this = this;\n\n    FetchDoGet(\"/block/v1/sys_user/selectAllUsers\", function (response) {\n      _this.setState({\n        data: response.data,\n        fetching: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      fetching,\n      data,\n      value\n    } = this.state;\n    let placeHolder = this.props.placeholder;\n\n    if (null == placeHolder || undefined == placeHolder) {\n      placeHolder = \"选择人员\";\n    }\n\n    return React.createElement(Select // mode=\"multiple\"\n    , {\n      labelInValue: true,\n      showSearch: true,\n      value: value,\n      placeholder: placeHolder,\n      onFocus: this.onFocus,\n      notFoundContent: fetching ? React.createElement(Spin, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) : null,\n      filterOption: false,\n      onSearch: this.fetchUser,\n      onChange: this.handleChange,\n      style: {\n        width: 200,\n        marginRight: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"font\", {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"*\\u6CA1\\u6709,\\u8BF7\\u641C\\u7D22*\")), data.map(item => React.createElement(Option, {\n      key: item.uId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, item.userName)));\n  } //end render\n\n\n} //end class\n\n\nexport default withRouter(SearchUserSelect);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/components/SearchUserSelect.js"],"names":["React","withRouter","Select","Spin","debounce","FetchDoGet","Option","SearchUserSelect","Component","constructor","props","fetchUser","value","console","log","setState","data","fetching","_this","response","userName","handleChange","onChange","onFocus","state","requestUrl","componentDidMount","render","placeHolder","placeholder","undefined","width","marginRight","map","item","uId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { FetchDoGet } from '../commons/Utils';\n\n\nconst { Option } = Select;\n\n/**\n * 查询用户的搜索框\n */\nclass SearchUserSelect extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            data: [],\n            fetching: false,\n            requestUrl:\"/block/v1/sys_user/selectAllUsers\",\n        }\n    }\n\n    fetchUser = value => {\n        console.log('fetching user', value);\n        this.setState({ data: [], fetching: true });\n        const _this=this;\n        FetchDoGet(\"/block/v1/sys_user/selectAllUsers\",function(response){\n          _this.setState({ \n            data:response.data,\n            fetching: false \n        });\n        },{userName:value});\n      };\n\n    handleChange = value => {\n        // this.setState({\n        //   value,\n        //   data: [],\n        //   fetching: false,\n        // });\n        /**\n         * 回掉我们的请求\n         */\n        this.props.onChange(value)\n    };\n\n    onFocus=() =>{\n      // this.setState({\n      //   data: [],\n      //   fetching: false,\n      // });\n    }\n\n    /**\n     * 初始化我们的数据\n     */\n    componentDidMount(){\n      this.setState({ data: [], fetching: true });\n      const _this=this;\n      FetchDoGet(\"/block/v1/sys_user/selectAllUsers\",function(response){\n            _this.setState({ \n                data:response.data,\n                fetching: false \n            });\n        });\n    }\n\n    render(){\n        const { fetching, data, value } = this.state;\n\n        let placeHolder=this.props.placeholder;\n        if(null==placeHolder||undefined==placeHolder){\n          placeHolder=\"选择人员\"\n        }\n        return(\n            <Select\n            // mode=\"multiple\"\n            labelInValue\n            showSearch\n            value={value}\n            placeholder={placeHolder}\n            onFocus={this.onFocus}\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n            filterOption={false}\n            onSearch={this.fetchUser}\n            onChange={this.handleChange}\n            style={{ width: 200,marginRight:\"8px\" }}\n            >\n              <Option value=\"\"><font color=\"red\">*没有,请搜索*</font></Option>\n              {data.map(item => (\n                <Option key={item.uId}>{item.userName}</Option>\n              ))}\n            </Select>\n        )\n\n    }//end render\n\n}//end class\n\nexport default withRouter(SearchUserSelect)"]},"metadata":{},"sourceType":"module"}