{"ast":null,"code":"import _classCallCheck from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/breakpoint/npm_work/test-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./EditTopic.css';import{withRouter,Redirect}from'react-router-dom';import BackBlogGround from'./BackBlogGround';import Editor from'for-editor';import{Input,Row,Col,Card,Button}from'antd';import{TextField}from'@material-ui/core';import MenuItem from'@material-ui/core/MenuItem';import{FetchDoUploadFile,FetchDoPost,MessageAlter,FetchDoGet,AjaxDoPost}from'../../commons/Utils';import $ from'jquery';/**\n * 编辑我们的文章\n */var EditTopic=/*#__PURE__*/function(_React$Component){_inherits(EditTopic,_React$Component);function EditTopic(props){var _this;_classCallCheck(this,EditTopic);_this=_possibleConstructorReturn(this,_getPrototypeOf(EditTopic).call(this,props));_this.state={markdownvalue:\"\",topicTypes:[],topicType:\"\"};_this.$vm=React.createRef();return _this;}/**\n     * 初始化我们的数据\n     */_createClass(EditTopic,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({topicTypes:[{value:'Java',label:'Java'},{value:'Spring',label:'Spring'},{value:'Mybatis',label:'Mybatis'},{value:'前端代码',label:'前端代码'},{value:'每天一个leecode',label:'每天一个leecode'},{value:'数据库',label:'数据库'},{value:'生活笔记',label:'生活笔记'},{value:'站点维护日志',label:'站点维护日志'}]});//FetchDoGet(\"/blog/v1/statistic/statisticTopic\")\n}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(BackBlogGround,{leftSpan:0,rightSpan:24,extra:React.createElement(Card,{title:\"新建文章\",extra:React.createElement(Button,{type:\"primary\",onClick:function onClick(){var postData={topicText:_this2.state.markdownvalue,topicName:$(\"#topicName\").val(),topicDesc:$(\"#topicDesc\").val(),topicType:_this2.state.topicType};console.log(postData);AjaxDoPost(\"/blog/v1/topic/saveForReact\",function(response){MessageAlter(\"success\",response);window.location.href=\"/private-zone\";},postData);}},\"\\u4FDD\\u5B58\")},React.createElement(Row,{gutter:[16,16]},React.createElement(Col,{span:24},React.createElement(TextField,{fullWidth:true,id:\"topicName\",label:\"\\u6587\\u7AE0\\u6807\\u9898\",variant:\"outlined\"})),React.createElement(Col,{span:24},React.createElement(TextField,{fullWidth:true,multiline:true,rowsMax:\"4\",id:\"topicDesc\",label:\"\\u6587\\u7AE0\\u7B80\\u4ECB\",variant:\"outlined\"})),React.createElement(Col,{span:24},React.createElement(TextField,{fullWidth:true,select:true,helperText:\"\\u8BF7\\u9009\\u62E9\\u6587\\u7AE0\\u7684\\u7C7B\\u522B\",id:\"topicDesc\",value:this.state.topicType,onChange:function onChange(event){_this2.setState({topicType:event.target.value});},label:\"\\u6587\\u7AE0\\u7C7B\\u522B\",variant:\"outlined\"},this.state.topicTypes.map(function(item){return React.createElement(MenuItem,{key:item.value,value:item.value},item.label);}))),React.createElement(Col,{span:24},React.createElement(Editor,{style:{width:\"100%\"},placeholder:\"请输入文章的信息\",ref:this.$vm,addImg:function addImg(file){var _this=_this2;var file2=new FormData();file2.append(\"file\",file);console.log(file);FetchDoUploadFile(\"/blog/v1/file/imageUpload4React\",file2,function(response){//console.log(response)\n_this.$vm.current.$img2Url(response.fileName,response.fileName);});},value:this.state.markdownvalue,onChange:function onChange(value){//console.log(value)\n_this2.setState({markdownvalue:value});}}))),React.createElement(Input,null))});}}]);return EditTopic;}(React.Component);export default withRouter(EditTopic);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/back/EditTopic.js"],"names":["React","withRouter","Redirect","BackBlogGround","Editor","Input","Row","Col","Card","Button","TextField","MenuItem","FetchDoUploadFile","FetchDoPost","MessageAlter","FetchDoGet","AjaxDoPost","$","EditTopic","props","state","markdownvalue","topicTypes","topicType","$vm","createRef","setState","value","label","postData","topicText","topicName","val","topicDesc","console","log","response","window","location","href","event","target","map","item","width","file","_this","file2","FormData","append","current","$img2Url","fileName","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './EditTopic.css'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport BackBlogGround from './BackBlogGround'\nimport Editor from 'for-editor'\nimport { Input, Row ,Col, Card, Button} from 'antd'\nimport { TextField } from '@material-ui/core'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FetchDoUploadFile ,FetchDoPost, MessageAlter, FetchDoGet, AjaxDoPost} from '../../commons/Utils'\nimport $ from 'jquery'\n\n/**\n * 编辑我们的文章\n */\nclass EditTopic extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            markdownvalue:\"\",\n            topicTypes:[],\n            topicType:\"\"\n        }\n        this.$vm = React.createRef()\n    }\n\n    /**\n     * 初始化我们的数据\n     */\n    componentDidMount(){\n        this.setState({\n            topicTypes:[\n                {\n                    value: 'Java',\n                    label: 'Java',\n                  },\n                  {\n                    value: 'Spring',\n                    label: 'Spring',\n                  },\n                  {\n                    value: 'Mybatis',\n                    label: 'Mybatis',\n                  },\n                  {\n                    value: '前端代码',\n                    label: '前端代码',\n                  },\n                  {\n                    value: '每天一个leecode',\n                    label: '每天一个leecode',\n                  },\n                  {\n                    value: '数据库',\n                    label: '数据库',\n                  },\n                  {\n                    value: '生活笔记',\n                    label: '生活笔记',\n                  },\n                  {\n                    value: '站点维护日志',\n                    label: '站点维护日志',\n                  }\n            ] \n        })\n\n        //FetchDoGet(\"/blog/v1/statistic/statisticTopic\")\n\n    }\n    render(){\n\n        return(\n            <BackBlogGround\n            leftSpan={0}\n            rightSpan={24}\n            extra={\n                <Card\n                title={\"新建文章\"}\n                extra={\n                    <Button type=\"primary\"\n                    onClick={()=>{\n                        let postData={\n                            topicText:this.state.markdownvalue,\n                            topicName:$(\"#topicName\").val(),\n                            topicDesc:$(\"#topicDesc\").val(),\n                            topicType:this.state.topicType\n                        }\n                        console.log(postData)\n                        AjaxDoPost(\"/blog/v1/topic/saveForReact\",(response)=>{\n                            MessageAlter(\"success\",response)\n                            window.location.href=\"/private-zone\"\n                        },postData)\n                    }}\n                    >\n                        保存\n                    </Button>\n                }\n                >\n                    <Row gutter={[16,16]}>\n                        <Col span={24}>\n                            <TextField \n                            fullWidth\n                            id=\"topicName\" \n                            label=\"文章标题\" \n                            variant=\"outlined\" />\n                        </Col>\n                        <Col span={24}>\n                            <TextField \n                            fullWidth\n                            multiline\n                            rowsMax=\"4\"\n                            id=\"topicDesc\" \n                            label=\"文章简介\" \n                            variant=\"outlined\" />\n                        </Col>\n                        <Col span={24}>\n                            <TextField \n                            fullWidth\n                            select\n                            helperText=\"请选择文章的类别\"\n                            id=\"topicDesc\" \n                            value={this.state.topicType}\n                            onChange={(event)=>{\n                                this.setState({\n                                    topicType:event.target.value\n                                })\n                            }}\n                            label=\"文章类别\" \n                            variant=\"outlined\">\n                                {this.state.topicTypes.map((item)=>{\n                                    return (\n                                        <MenuItem key={item.value} value={item.value}>\n                                            {item.label}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </TextField>\n                        </Col>\n                        <Col span={24}>\n                            <Editor\n                            style={{width:\"100%\"}}\n                            placeholder={\"请输入文章的信息\"}\n                            ref={this.$vm}\n                            addImg={(file)=>{\n                                const _this=this;\n                                const file2=new FormData()\n                                file2.append(\"file\",file)\n                                console.log(file)\n                                FetchDoUploadFile(\"/blog/v1/file/imageUpload4React\",file2,(response)=>{\n                                    //console.log(response)\n                                    _this.$vm.current.$img2Url(response.fileName, response.fileName)\n                                    \n                                })\n                                \n                            }}\n                            value={this.state.markdownvalue} onChange={(value) =>{\n                                //console.log(value)\n                                this.setState({\n                                    markdownvalue:value\n                                })\n                            }} />\n                        </Col>\n                    </Row>\n                    <Input/>\n\n                </Card>\n            }\n            />\n        )\n    }\n\n}\n\nexport default withRouter(EditTopic)"]},"metadata":{},"sourceType":"module"}