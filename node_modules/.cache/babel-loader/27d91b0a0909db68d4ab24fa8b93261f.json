{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/commons/DialogUtils.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport $ from 'jquery';\n\nfunction Alert(props) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n}\n\nconst useStyles = {\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: \"50%\"\n    }\n  }\n};\n/**\n * 自定义的提示组件\n */\n\nclass Dialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      show: this.props.show,\n      showCloseButton: this.props.showCloseButton\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.props.callBackExe(true);\n  }\n\n  handleClose() {\n    // this.props({\n    //     open:false\n    // })\n    this.props.callBack(false);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    let {\n      open,\n      message,\n      callBackExe\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Open success snackbar\"), React.createElement(Snackbar, {\n      id: \"Snackbar\",\n      open: open,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      onClose: this.handleClose,\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, message)), React.createElement(Alert, {\n      severity: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"This is an error message!\"), React.createElement(Alert, {\n      severity: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"This is a warning message!\"), React.createElement(Alert, {\n      severity: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"This is an information message!\"), React.createElement(Alert, {\n      severity: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"This is a success message!\"));\n  }\n\n}\n\nexport default withStyles(useStyles)(Dialog);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/commons/DialogUtils.js"],"names":["React","withStyles","Snackbar","MuiAlert","Button","$","Alert","props","useStyles","root","width","marginTop","Dialog","Component","constructor","state","open","show","showCloseButton","handleClick","bind","handleClose","callBackExe","callBack","render","classes","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,SAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,MAAMC,SAAS,GAAE;AACbC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEF,iBAAa;AACXC,MAAAA,SAAS,EAAE;AADA;AAFX;AADO,CAAjB;AAQA;;;;AAGA,MAAMC,MAAN,SAAqBZ,KAAK,CAACa,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACP,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKQ,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,KADE;AAEPC,MAAAA,IAAI,EAAC,KAAKV,KAAL,CAAWU,IAFT;AAGPC,MAAAA,eAAe,EAAE,KAAKX,KAAL,CAAWW;AAHrB,KAAX;AAKA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AACA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAjB;AACH;;AAEDD,EAAAA,WAAW,GAAE;AACT,SAAKZ,KAAL,CAAWe,WAAX,CAAuB,IAAvB;AACH;;AAEDD,EAAAA,WAAW,GAAE;AACT;AACA;AACA;AACA,SAAKd,KAAL,CAAWgB,QAAX,CAAoB,KAApB;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKlB,KAAvB;AAGA,QAAG;AAACS,MAAAA,IAAD;AAAMU,MAAAA,OAAN;AAAcJ,MAAAA;AAAd,QAA4B,KAAKf,KAApC;AAEA,WACJ;AAAK,MAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAE,KAAKU,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAIE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAEH,IAA9B;AAAoC,MAAA,gBAAgB,EAAE,IAAtD;AAA4D,MAAA,OAAO,EAAE,KAAKK,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKA,WAArB;AAAkC,MAAA,QAAQ,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,OADH,CADF,CAJF,EASE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCATF,EAUE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAVF,EAWE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAXF,EAYE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAZF,CADI;AAgBH;;AA9C+B;;AAiDpC,eAAezB,UAAU,CAACO,SAAD,CAAV,CAAsBI,MAAtB,CAAf","sourcesContent":["import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport $ from 'jquery'\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles ={\n    root: {\n        width: '100%',\n        '& > * + *': {\n          marginTop: \"50%\",\n        },\n      },\n}\n/**\n * 自定义的提示组件\n */\nclass Dialog extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            open:false,\n            show:this.props.show,\n            showCloseButton: this.props.showCloseButton\n        }\n        this.handleClick=this.handleClick.bind(this)\n        this.handleClose=this.handleClose.bind(this)\n    }\n\n    handleClick(){\n        this.props.callBackExe(true)\n    }\n\n    handleClose(){\n        // this.props({\n        //     open:false\n        // })\n        this.props.callBack(false)\n    }\n\n    render(){\n\n        const {classes} = this.props;\n\n\n        let{open,message,callBackExe} =this.props;\n\n        return(\n    <div className={classes.root}>\n      <Button variant=\"outlined\" onClick={this.handleClick}>\n        Open success snackbar\n      </Button>\n      <Snackbar id=\"Snackbar\" open={open} autoHideDuration={6000} onClose={this.handleClose}>\n        <Alert onClose={this.handleClose} severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert>\n    </div>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(Dialog)"]},"metadata":{},"sourceType":"module"}