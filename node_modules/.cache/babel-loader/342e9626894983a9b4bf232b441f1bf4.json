{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/components/SearchUserSelect.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { FetchDoGet } from '../commons/Utils';\nconst {\n  Option\n} = Select;\n/**\n * 查询用户的搜索框\n */\n\nclass SearchUserSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUser = value => {\n      console.log('fetching user', value);\n      this.lastFetchId += 1;\n      const fetchId = this.lastFetchId;\n      this.setState({\n        data: [],\n        fetching: true\n      });\n\n      const _this = this;\n\n      FetchDoGet(\"/block/v1/sys_user/selectAllUsers\", function (response) {\n        console.log(response);\n\n        if (fetchId !== _this.lastFetchId) {\n          // for fetch callback order\n          return;\n        }\n\n        const data = response.data.map(user => ({\n          text: `${user.userName} ${user.userNickName}`,\n          value: user.uId\n        }));\n\n        _this.setState({\n          data,\n          fetching: false\n        });\n      }, {\n        userName: value\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        value,\n        data: [],\n        fetching: false\n      });\n      /**\n       * 回掉我们的请求\n       */\n\n      this.props.onChange(value);\n    };\n\n    this.state = {\n      data: [],\n      value: [],\n      fetching: false\n    };\n    this.lastFetchId = 0;\n    this.fetchUser = debounce(this.fetchUser, 800);\n  }\n\n  render() {\n    const {\n      fetching,\n      data,\n      value\n    } = this.state;\n    return React.createElement(Select // mode=\"multiple\"\n    , {\n      labelInValue: true,\n      showSearch: true,\n      value: value,\n      placeholder: \"Select users\",\n      notFoundContent: fetching ? React.createElement(Spin, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }) : null,\n      filterOption: false,\n      onSearch: this.fetchUser,\n      onChange: this.handleChange,\n      style: {\n        width: 200,\n        marginRight: \"8px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, data.map(d => React.createElement(Option, {\n      key: d.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, d.text)));\n  } //end render\n\n\n} //end class\n\n\nexport default withRouter(SearchUserSelect);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/components/SearchUserSelect.js"],"names":["React","withRouter","Select","Spin","debounce","FetchDoGet","Option","SearchUserSelect","Component","constructor","props","fetchUser","value","console","log","lastFetchId","fetchId","setState","data","fetching","_this","response","map","user","text","userName","userNickName","uId","handleChange","onChange","state","render","width","marginRight","d"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { FetchDoGet } from '../commons/Utils';\n\n\nconst { Option } = Select;\n\n/**\n * 查询用户的搜索框\n */\nclass SearchUserSelect extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            data: [],\n            value: [],\n            fetching: false,\n        }\n\n        this.lastFetchId = 0;\n        this.fetchUser = debounce(this.fetchUser, 800);    \n\n    }\n\n    fetchUser = value => {\n        console.log('fetching user', value);\n        this.lastFetchId += 1;\n        const fetchId = this.lastFetchId;\n        this.setState({ data: [], fetching: true });\n\n        const _this=this;\n\n        FetchDoGet(\"/block/v1/sys_user/selectAllUsers\",function(response){\n            console.log(response)\n            if (fetchId !== _this.lastFetchId) {\n                      // for fetch callback order\n                      return;\n            }\n            const data = response.data.map(user => ({\n              text: `${user.userName} ${user.userNickName}`,\n              value: user.uId,\n            }));\n            _this.setState({ data, fetching: false });\n        },{userName:value});\n      };\n\n      handleChange = value => {\n        this.setState({\n          value,\n          data: [],\n          fetching: false,\n        });\n        /**\n         * 回掉我们的请求\n         */\n        this.props.onChange(value)\n      };\n\n    render(){\n        const { fetching, data, value } = this.state;\n\n        return(\n            <Select\n            // mode=\"multiple\"\n            labelInValue\n            showSearch\n            value={value}\n            placeholder=\"Select users\"\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n            filterOption={false}\n            onSearch={this.fetchUser}\n            onChange={this.handleChange}\n            style={{ width: 200,marginRight:\"8px\" }}\n            >\n                {data.map(d => (\n                <Option key={d.value}>{d.text}</Option>\n                ))}\n            </Select>\n        )\n\n    }//end render\n\n}//end class\n\nexport default withRouter(SearchUserSelect)"]},"metadata":{},"sourceType":"module"}