{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/router/back/UpdateTopic.js\";\nimport React from 'react';\nimport './UpdateTopic.css';\nimport { withRouter } from 'react-router-dom';\nimport BackBlogGround from './BackBlogGround';\nimport Editor from 'for-editor';\nimport { Input, Row, Col, Card, Button } from 'antd';\nimport { TextField } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FetchDoUploadFile, FetchDoPost, MessageAlter, FetchDoGet } from '../../commons/Utils';\nimport $ from 'jquery';\n/**\n * 更新我们的文章\n */\n\nclass UpdateTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdownvalue: \"\",\n      topicTypes: [],\n      topicType: \"\",\n      topicId: \"\",\n      topicName: \"\",\n      topicDesc: \"\"\n    };\n    this.$vm = React.createRef();\n  }\n  /**\n  * 初始化我们的数据\n  */\n\n\n  componentDidMount() {\n    const _this = this;\n\n    const pState = this.props.location.state;\n\n    if (pState != null && undefined != pState && undefined != pState.record && null != pState.record) {\n      console.log(\"record\", pState.record);\n      FetchDoGet(\"/blog/v1/topic/show\", response => {\n        console.log(response);\n\n        _this.setState({\n          markdownvalue: response.topicText,\n          topicType: response.topicCategory,\n          topicId: response.topicId,\n          topicName: response.topicName,\n          topicDesc: response.topicTypes\n        });\n      }, {\n        topicId: pState.record.topicId\n      });\n    } else {\n      window.location.href = \"/private-zone\";\n    }\n\n    this.setState({\n      topicTypes: [{\n        value: 'Java',\n        label: 'Java'\n      }, {\n        value: 'Spring',\n        label: 'Spring'\n      }, {\n        value: 'Mybatis',\n        label: 'Mybatis'\n      }, {\n        value: '前端代码',\n        label: '前端代码'\n      }, {\n        value: '每天一个leecode',\n        label: '每天一个leecode'\n      }, {\n        value: '数据库',\n        label: '数据库'\n      }, {\n        value: '生活笔记',\n        label: '生活笔记'\n      }, {\n        value: '站点维护日志',\n        label: '站点维护日志'\n      }]\n    }); //FetchDoGet(\"/blog/v1/statistic/statisticTopic\")\n  }\n\n  render() {\n    return React.createElement(BackBlogGround, {\n      leftSpan: 0,\n      rightSpan: 24,\n      extra: React.createElement(Card, {\n        title: \"更新文章\",\n        extra: React.createElement(Button, {\n          type: \"primary\",\n          onClick: () => {\n            let postData = {\n              topicText: this.state.markdownvalue,\n              topicName: $(\"#topicName\").val(),\n              topicDesc: $(\"#topicDesc\").val(),\n              topicType: this.state.topicType\n            };\n            console.log(postData);\n            FetchDoPost(\"/blog/v1/topic/saveForReact\", response => {\n              MessageAlter(\"success\", response);\n              window.location.href = \"/private-zone\";\n            }, postData);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"\\u4FDD\\u5B58\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: [16, 16],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        id: \"topicName\",\n        value: this.state.topicName,\n        label: \"\\u6587\\u7AE0\\u6807\\u9898\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        multiline: true,\n        rowsMax: \"4\",\n        value: this.state.topicDesc,\n        id: \"topicDesc\",\n        label: \"\\u6587\\u7AE0\\u7B80\\u4ECB\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        select: true,\n        helperText: \"\\u8BF7\\u9009\\u62E9\\u6587\\u7AE0\\u7684\\u7C7B\\u522B\",\n        id: \"topicDesc\",\n        value: this.state.topicType,\n        onChange: event => {\n          this.setState({\n            topicType: event.target.value\n          });\n        },\n        label: \"\\u6587\\u7AE0\\u7C7B\\u522B\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.topicTypes.map(item => {\n        return React.createElement(MenuItem, {\n          key: item.value,\n          value: item.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, item.label);\n      }))), React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        style: {\n          width: \"100%\"\n        },\n        placeholder: \"请输入文章的信息\",\n        ref: this.$vm,\n        addImg: file => {\n          const _this = this;\n\n          const file2 = new FormData();\n          file2.append(\"file\", file);\n          console.log(file);\n          FetchDoUploadFile(\"/blog/v1/file/imageUpload4React\", file2, response => {\n            //console.log(response)\n            _this.$vm.current.$img2Url(response.fileName, response.fileName);\n          });\n        },\n        value: this.state.markdownvalue,\n        onChange: value => {\n          //console.log(value)\n          this.setState({\n            markdownvalue: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(UpdateTopic);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/back/UpdateTopic.js"],"names":["React","withRouter","BackBlogGround","Editor","Input","Row","Col","Card","Button","TextField","MenuItem","FetchDoUploadFile","FetchDoPost","MessageAlter","FetchDoGet","$","UpdateTopic","Component","constructor","props","state","markdownvalue","topicTypes","topicType","topicId","topicName","topicDesc","$vm","createRef","componentDidMount","_this","pState","location","undefined","record","console","log","response","setState","topicText","topicCategory","window","href","value","label","render","postData","val","event","target","map","item","width","file","file2","FormData","append","current","$img2Url","fileName"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './UpdateTopic.css'\nimport { withRouter } from 'react-router-dom'\nimport BackBlogGround from './BackBlogGround'\nimport Editor from 'for-editor'\nimport { Input, Row ,Col, Card, Button} from 'antd'\nimport { TextField } from '@material-ui/core'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FetchDoUploadFile ,FetchDoPost, MessageAlter, FetchDoGet} from '../../commons/Utils'\nimport $ from 'jquery'\n\n/**\n * 更新我们的文章\n */\nclass UpdateTopic extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            markdownvalue:\"\",\n            topicTypes:[],\n            topicType:\"\",\n            topicId:\"\",\n            topicName:\"\",\n            topicDesc:\"\",\n        }\n        this.$vm = React.createRef()\n    }\n\n     /**\n     * 初始化我们的数据\n     */\n    componentDidMount(){\n\n        const _this=this;\n\n        const pState=this.props.location.state;\n        \n        if(pState!=null&&undefined!=pState&&undefined!=pState.record&&null!=pState.record){\n            console.log(\"record\",pState.record)\n            FetchDoGet(\"/blog/v1/topic/show\",(response)=>{\n                console.log(response)\n                _this.setState({\n                    markdownvalue:response.topicText,\n                    topicType:response.topicCategory,\n                    topicId:response.topicId,\n                    topicName:response.topicName,\n                    topicDesc:response.topicTypes\n                })\n            },{\n                topicId:pState.record.topicId\n            })\n        }else{\n           window.location.href=\"/private-zone\"\n        }\n\n\n        this.setState({\n            topicTypes:[\n                {\n                    value: 'Java',\n                    label: 'Java',\n                  },\n                  {\n                    value: 'Spring',\n                    label: 'Spring',\n                  },\n                  {\n                    value: 'Mybatis',\n                    label: 'Mybatis',\n                  },\n                  {\n                    value: '前端代码',\n                    label: '前端代码',\n                  },\n                  {\n                    value: '每天一个leecode',\n                    label: '每天一个leecode',\n                  },\n                  {\n                    value: '数据库',\n                    label: '数据库',\n                  },\n                  {\n                    value: '生活笔记',\n                    label: '生活笔记',\n                  },\n                  {\n                    value: '站点维护日志',\n                    label: '站点维护日志',\n                  }\n            ] \n        })\n\n        //FetchDoGet(\"/blog/v1/statistic/statisticTopic\")\n\n      \n\n    }\n\n    render(){\n\n        return(\n            <BackBlogGround\n            leftSpan={0}\n            rightSpan={24}\n            extra={\n                <Card\n                title={\"更新文章\"}\n                extra={\n                    <Button type=\"primary\"\n                    onClick={()=>{\n                        let postData={\n                            topicText:this.state.markdownvalue,\n                            topicName:$(\"#topicName\").val(),\n                            topicDesc:$(\"#topicDesc\").val(),\n                            topicType:this.state.topicType\n                        }\n                        console.log(postData)\n                        FetchDoPost(\"/blog/v1/topic/saveForReact\",(response)=>{\n                            MessageAlter(\"success\",response)\n                            window.location.href=\"/private-zone\"\n                        },postData)\n                    }}\n                    >\n                        保存\n                    </Button>\n                }\n                >\n                    <Row gutter={[16,16]}>\n                        <Col span={24}>\n                            <TextField \n                            fullWidth\n                            id=\"topicName\" \n                            value={this.state.topicName}\n                            label=\"文章标题\" \n                            variant=\"outlined\" />\n                        </Col>\n                        <Col span={24}>\n                            <TextField \n                            fullWidth\n                            multiline\n                            rowsMax=\"4\"\n                            value={this.state.topicDesc}\n                            id=\"topicDesc\" \n                            label=\"文章简介\" \n                            variant=\"outlined\" />\n                        </Col>\n                        <Col span={24}>\n                            <TextField \n                            fullWidth\n                            select\n                            helperText=\"请选择文章的类别\"\n                            id=\"topicDesc\" \n                            value={this.state.topicType}\n                            onChange={(event)=>{\n                                this.setState({\n                                    topicType:event.target.value\n                                })\n                            }}\n                            label=\"文章类别\" \n                            variant=\"outlined\">\n                                {this.state.topicTypes.map((item)=>{\n                                    return (\n                                        <MenuItem key={item.value} value={item.value}>\n                                            {item.label}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </TextField>\n                        </Col>\n                        <Col span={24}>\n                            <Editor\n                            style={{width:\"100%\"}}\n                            placeholder={\"请输入文章的信息\"}\n                            ref={this.$vm}\n                            addImg={(file)=>{\n                                const _this=this;\n                                const file2=new FormData()\n                                file2.append(\"file\",file)\n                                console.log(file)\n                                FetchDoUploadFile(\"/blog/v1/file/imageUpload4React\",file2,(response)=>{\n                                    //console.log(response)\n                                    _this.$vm.current.$img2Url(response.fileName, response.fileName)\n                                    \n                                })\n                                \n                            }}\n                            value={this.state.markdownvalue} onChange={(value) =>{\n                                //console.log(value)\n                                this.setState({\n                                    markdownvalue:value\n                                })\n                            }} />\n                        </Col>\n                    </Row>\n                    <Input/>\n\n                </Card>\n            }\n            />\n        )\n    }\n\n}\n\nexport default withRouter(UpdateTopic)"]},"metadata":{},"sourceType":"module"}