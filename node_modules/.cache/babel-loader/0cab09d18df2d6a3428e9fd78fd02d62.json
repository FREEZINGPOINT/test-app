{"ast":null,"code":"/**\n * \n * @param {} initialState \n */\nexport function createStore(initialState) {\n  let state = initialState;\n  const listeners = [];\n\n  function setState(partial) {\n    state = { ...state,\n      ...partial\n    };\n\n    for (let i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n  }\n\n  function getState() {\n    return state;\n  }\n\n  function subscribe(listener) {\n    listeners.push(listener);\n    return function unsubscribe() {\n      const index = listeners.indexOf(listener);\n      listeners.splice(index, 1);\n    };\n  }\n\n  return {\n    setState,\n    getState,\n    subscribe\n  };\n}","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/store/StoreUtils.js"],"names":["createStore","initialState","state","listeners","setState","partial","i","length","getState","subscribe","listener","push","unsubscribe","index","indexOf","splice"],"mappings":"AACA;;;;AAIA,OAAO,SAASA,WAAT,CAAqBC,YAArB,EAAmC;AACtC,MAAIC,KAAK,GAAGD,YAAZ;AACA,QAAME,SAAS,GAAG,EAAlB;;AAEA,WAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAC1BH,IAAAA,KAAK,GAAG,EACP,GAAGA,KADI;AAEP,SAAGG;AAFI,KAAR;;AAIA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC1CH,MAAAA,SAAS,CAACG,CAAD,CAAT;AACA;AACD;;AAED,WAASE,QAAT,GAAoB;AACnB,WAAON,KAAP;AACA;;AAED,WAASO,SAAT,CAAmBC,QAAnB,EAA6B;AAC5BP,IAAAA,SAAS,CAACQ,IAAV,CAAeD,QAAf;AAEA,WAAO,SAASE,WAAT,GAAuB;AAC7B,YAAMC,KAAK,GAAGV,SAAS,CAACW,OAAV,CAAkBJ,QAAlB,CAAd;AACAP,MAAAA,SAAS,CAACY,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACA,KAHD;AAIA;;AAED,SAAO;AACNT,IAAAA,QADM;AAENI,IAAAA,QAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA","sourcesContent":["\n/**\n * \n * @param {} initialState \n */\nexport function createStore(initialState) {\n    let state = initialState;\n    const listeners = [];\n    \n    function setState(partial) {\n     state = {\n      ...state,\n      ...partial,\n     };\n     for (let i = 0; i < listeners.length; i++) {\n      listeners[i]();\n     }\n    }\n    \n    function getState() {\n     return state;\n    }\n    \n    function subscribe(listener) {\n     listeners.push(listener);\n    \n     return function unsubscribe() {\n      const index = listeners.indexOf(listener);\n      listeners.splice(index, 1);\n     };\n    }\n    \n    return {\n     setState,\n     getState,\n     subscribe,\n    };\n   }"]},"metadata":{},"sourceType":"module"}