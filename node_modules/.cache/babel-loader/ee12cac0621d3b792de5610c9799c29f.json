{"ast":null,"code":"import React from 'react';\nimport { fetch as fetchPolyfill } from 'whatwg-fetch';\n/**\n * 我们的基本的工具\n */\n\n/**\n * \n * @param {*} url  请求的url\n * @param {*} callback  回掉函数\n * @param {*} paramMap  请求参数\n */\n\nexport function FetchDoGet(url, callback, paramMap, isAlert) {\n  let moreStr = \"?\";\n\n  if (null != paramMap && undefined != paramMap) {\n    const keys = Object.keys(paramMap);\n\n    for (var index in keys) {\n      {\n        moreStr = moreStr + \"&\" + keys[index] + \"=\" + paramMap[keys[index]];\n      }\n    }\n  }\n\n  fetch(url + moreStr, {\n    method: \"GET\"\n  }).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    console.log(isAlert);\n\n    if (isAlert) {\n      if (json.respCode == 200) {\n        if (null != callback && undefined != callback) {\n          callback(json.data);\n        }\n      } else if (json.respCode == 300) {\n        alert(json.data);\n      } else {\n        alert(json.data);\n      }\n    } else {\n      callback(json);\n    }\n\n    console.log(json);\n  });\n}\n/**\n * post 的请求操作\n * @param {*} url  请求的路径\n * @param {*} callback  回掉的函数\n * @param {*} paramMap  请求的参数\n */\n\nexport function FetchDoPost(url, callback, paramMap) {\n  let data = {};\n\n  if (null != paramMap && undefined != paramMap) {\n    data = paramMap;\n  }\n\n  let moreStr = \"?\";\n\n  if (null != paramMap && undefined != paramMap) {\n    const keys = Object.keys(paramMap);\n\n    for (var index in keys) {\n      {\n        moreStr = moreStr + \"&\" + keys[index] + \"=\" + paramMap[keys[index]];\n      }\n    }\n  }\n\n  console.log(\"data\", data);\n  fetch(url + moreStr, {\n    method: \"POST\",\n    // mode: 'cors',\n    // credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    if (json.respCode == 200) {\n      if (null != callback && undefined != callback) {\n        callback(json.data);\n      }\n    } else if (json.respCode == 300) {\n      alert(json.data);\n    } else {\n      alert(json.data);\n    }\n\n    console.log(json);\n  });\n}","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/commons/Utils.js"],"names":["React","fetch","fetchPolyfill","FetchDoGet","url","callback","paramMap","isAlert","moreStr","undefined","keys","Object","index","method","then","response","json","console","log","respCode","data","alert","FetchDoPost","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {fetch as fetchPolyfill} from 'whatwg-fetch'\n\n\n/**\n * 我们的基本的工具\n */\n\n/**\n * \n * @param {*} url  请求的url\n * @param {*} callback  回掉函数\n * @param {*} paramMap  请求参数\n */\nexport function FetchDoGet(url,callback,paramMap,isAlert){\n    let moreStr=\"?\"\n    if(null!=paramMap&&undefined!=paramMap){\n        const keys=Object.keys(paramMap);\n        for(var index in keys){\n            {moreStr=moreStr+\"&\"+keys[index]+\"=\"+paramMap[keys[index]]}\n        }\n    }\n    fetch(url+moreStr,{\n        method:\"GET\",\n    }).then(function(response){\n        return response.json()\n    }).then(function(json){\n        console.log(isAlert);\n        if(isAlert){\n            if(json.respCode==200){\n                if(null!=callback&&undefined!=callback){\n                    callback(json.data) \n                }\n            }else if(json.respCode==300){\n                alert(json.data)\n            }else{\n                alert(json.data)\n    \n            }\n        }else{\n            callback(json) \n        }\n       console.log(json)\n    });\n}\n\n/**\n * post 的请求操作\n * @param {*} url  请求的路径\n * @param {*} callback  回掉的函数\n * @param {*} paramMap  请求的参数\n */\nexport function FetchDoPost(url,callback,paramMap){\n    let data={}\n    if(null!=paramMap&&undefined!=paramMap){\n        data=paramMap\n    }\n\n    let moreStr=\"?\"\n    if(null!=paramMap&&undefined!=paramMap){\n        const keys=Object.keys(paramMap);\n        for(var index in keys){\n            {moreStr=moreStr+\"&\"+keys[index]+\"=\"+paramMap[keys[index]]}\n        }\n    }\n    console.log(\"data\",data);\n    fetch(url+moreStr,{\n        method:\"POST\",\n        // mode: 'cors',\n        // credentials: 'include',\n        headers: {\n            'Accept': 'application/json', \n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n          },\n        body:JSON.stringify(data)\n    }).then(function(response){\n        return response.json()\n    }).then(function(json){\n        if(json.respCode==200){\n            if(null!=callback&&undefined!=callback){\n                callback(json.data)   \n            }\n        }else if(json.respCode==300){\n            alert(json.data)\n        }else{\n            alert(json.data)\n        }\n       console.log(json)\n    });\n\n}"]},"metadata":{},"sourceType":"module"}