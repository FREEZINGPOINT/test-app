{"ast":null,"code":"var _jsxFileName = \"/Users/breakpoint/npm_work/test-app/src/router/blog/CommentSite.js\";\nimport React from 'react';\nimport './CommentSite.css';\nimport { withRouter } from 'react-router-dom';\nimport { List, Card, Comment, Pagination } from 'antd';\nimport BlogCommonBackGround from '../../components/blog/BlogCommonBackGround';\nimport { FetchDoGet } from '../../commons/Utils';\nimport moment from 'moment';\n/**\n * 我们的留言版本\n */\n\nclass CommentSite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestUrl: \"/v1/liuyan/getYouLiuYanList\",\n      comments: [],\n      pageInfo: {}\n    };\n  }\n  /**\n   * 初始化的数据\n   */\n\n\n  componentDidMount() {\n    const _this = this;\n\n    FetchDoGet(this.state.requestUrl, response => {\n      _this.setState({\n        comments: response.data,\n        pageInfo: response\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(BlogCommonBackGround, {\n      extra: React.createElement(Card, {\n        title: \"留言板\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(List, {\n        className: \"comment-list\" // header={`${this.state.comments.length} replies`}\n        ,\n        itemLayout: \"horizontal\",\n        dataSource: this.state.comments,\n        pagination: false,\n        footer: React.createElement(Pagination, {\n          showQuickJumper: true,\n          showTotal: (total, range) => {\n            return `当前显示：${range[0]}-${range[1]} 文章 总计 ${total} 篇文章`;\n          },\n          current: this.state.pageInfo.currentPage,\n          defaultPageSize: this.state.pageInfo.pageSize,\n          defaultCurrent: this.state.pageInfo.currentPage,\n          total: this.state.pageInfo.totalCount,\n          onChange: (page, pageSize) => {\n            const _this = this;\n\n            FetchDoGet(this.state.requestUrl, function (response) {\n              console.log(response);\n\n              _this.setState({\n                comments: response.data,\n                pageInfo: response\n              });\n            }, {\n              currentPage: page,\n              pageSize: pageSize\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        renderItem: item => React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Comment // actions={item.actions}\n        , {\n          author: React.createElement(\"span\", {\n            style: {\n              fontSize: \"14px\",\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, item.userName),\n          avatar: item.pitureUrl,\n          content: React.createElement(\"span\", {\n            style: {\n              fontSize: \"14px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, item.message),\n          datetime: React.createElement(\"span\", {\n            style: {\n              fontSize: \"14px\",\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, item.gmtUpdate),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(CommentSite);","map":{"version":3,"sources":["/Users/breakpoint/npm_work/test-app/src/router/blog/CommentSite.js"],"names":["React","withRouter","List","Card","Comment","Pagination","BlogCommonBackGround","FetchDoGet","moment","CommentSite","Component","constructor","props","state","requestUrl","comments","pageInfo","componentDidMount","_this","response","setState","data","render","total","range","currentPage","pageSize","totalCount","page","console","log","item","fontSize","fontWeight","userName","pitureUrl","message","gmtUpdate"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './CommentSite.css'\nimport { withRouter } from 'react-router-dom'\nimport {List,Card,Comment,Pagination} from 'antd'\nimport BlogCommonBackGround from '../../components/blog/BlogCommonBackGround'\nimport { FetchDoGet } from '../../commons/Utils'\nimport moment from 'moment';\n\n/**\n * 我们的留言版本\n */\nclass CommentSite extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            requestUrl:\"/v1/liuyan/getYouLiuYanList\",\n            comments:[],\n            pageInfo:{}\n\n        }\n    }\n\n    /**\n     * 初始化的数据\n     */\n    componentDidMount(){\n        const _this=this;\n        FetchDoGet(this.state.requestUrl,(response)=>{\n            _this.setState({\n                comments:response.data,\n                pageInfo:response\n            })\n        })\n\n    }\n\n    render(){\n\n        return(\n            <BlogCommonBackGround\n            extra={\n                <Card\n                title={\"留言板\"}\n                >\n                    <List\n                        className=\"comment-list\"\n                        // header={`${this.state.comments.length} replies`}\n                        itemLayout=\"horizontal\"\n                        dataSource={this.state.comments}\n                        pagination={false}\n                        footer={\n                            <Pagination \n                            showQuickJumper\n                            showTotal={(total, range)=>{\n                                return `当前显示：${range[0]}-${range[1]} 文章 总计 ${total} 篇文章`\n                            }}\n                            current={this.state.pageInfo.currentPage}\n                            defaultPageSize={this.state.pageInfo.pageSize}\n                            defaultCurrent={this.state.pageInfo.currentPage} \n                            total={this.state.pageInfo.totalCount} \n                            onChange={(page, pageSize)=>{\n                                const _this=this;\n                                FetchDoGet(this.state.requestUrl,function(response){\n                                    console.log(response)\n                                    _this.setState({\n                                        comments:response.data,\n                                        pageInfo:response\n                                    })\n                                },{\n                                    currentPage:page,\n                                    pageSize:pageSize\n                                });\n                            }} />\n                        }\n                        renderItem={item => (\n                        <li>\n                            <Comment\n                            // actions={item.actions}\n                            author={\n                                <span style={{fontSize:\"14px\",fontWeight:\"bold\"}}>\n                                    {item.userName}\n                                </span>\n                            }\n                            avatar={item.pitureUrl}\n                            content={\n                            <span style={{fontSize:\"14px\"}}>{item.message}</span>\n                            }\n                            datetime={\n                                <span style={{fontSize:\"14px\",fontWeight:\"bold\"}}>\n                                    {item.gmtUpdate}\n                                </span>\n                                \n                            }\n                            />\n                        </li>\n                        )}\n                    />\n                </Card>\n            }\n            />\n        )\n    }\n\n}\n\nexport default withRouter(CommentSite)"]},"metadata":{},"sourceType":"module"}